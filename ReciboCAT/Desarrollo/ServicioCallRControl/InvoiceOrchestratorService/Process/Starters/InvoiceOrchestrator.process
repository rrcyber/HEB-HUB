<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://xmlns.tibco.com/encodings/mime" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx5="http://xmlns.heb.com/ei/Message_Request" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/XLS/Invoice.xsd" xmlns:pfx3="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pfx2="http://xmlns.heb.com/ei/DIGITAL_INVOICE_REQUEST" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema/Common/ParametrosFin.xsd" xmlns:pfx7="http://www.w3.org/2003/05/soap-envelope/" xmlns:pfx6="http://xmlns.heb.com/ei/SPGFaultSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns5="http://xmlns.tibco.com/bw/plugin-api/messages/context" xmlns:ns13="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns6="http://xmlns.heb.com/ei/DIGITAL_INVOICE_RESPONSE" xmlns:pfx="http://www.heb.com/ei/MexicoDigitalInvoiceService" xmlns:ns7="http://www.sat.gob.mx/cfd/3" xmlns:ns10="http://xmlns.heb.com/ei/MESSAGE_REPLY" xmlns:ns8="http://www.sat.gob.mx/TimbreFiscalDigital" xmlns:ns11="http://xmlns.heb.com/ei/ErrorManagementSchema" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns4="http://xmlns.tibco.com/bw/security/tokens" xmlns:ns3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://xmlns.heb.com/ei/DIGITAL_INVOICE_REQUEST"/>
    <xsd:import namespace="http://xmlns.heb.com/ei/DIGITAL_INVOICE_REQUEST" schemaLocation="/Shared Resources/WSDLs/Acreedores_20140910.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/XLS/Invoice.xsd" schemaLocation="/Shared Resources/XLS/Invoice.xsd"/>
    <xsd:import namespace="http://xmlns.heb.com/ei/SPGFaultSchema" schemaLocation="/Shared Resources/Schema/FaultSchema.xsd"/>
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="/Shared Resources/Schema/SOAPEnvelop.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema/Common/ParametrosFin.xsd" schemaLocation="/Shared Resources/Schema/Common/ParametrosFin.xsd"/>
    <wsdl:import namespace="http://www.heb.com/ei/MexicoDigitalInvoiceService" location="/Shared Resources/WSDLs/Acreedores_201410010834.wsdl"/>
    <pd:name>Process/Starters/InvoiceOrchestrator.process</pd:name>
    <pd:startName>HTTP Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="HTTP Receiver">
        <pd:type>com.tibco.plugin.http.HTTPEventSource</pd:type>
        <pd:resourceType>httppalette.httpEventSource</pd:resourceType>
        <pd:x>84</pd:x>
        <pd:y>510</pd:y>
        <config>
            <outputMode>String</outputMode>
            <defaultEncoding>ISO8859_1</defaultEncoding>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <sharedChannel>/Shared Resources/HTTP/HTTP Connection.sharedhttp</sharedChannel>
            <parsePostData>false</parsePostData>
            <useHTTPAuthentication>false</useHTTPAuthentication>
            <exposeSecurityContext>true</exposeSecurityContext>
            <customField/>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Connection" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1248</pd:endX>
    <pd:endY>364</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:any processContents="lax"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1409925959464</pd:targetNamespace>
    <pd:activity name="Send HTTP Response_Acreedores">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>943</pd:x>
        <pd:y>410</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>HTTP Receiver</eventSource>
            <flushResponse>true</flushResponse>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:if test="$Send-HTTP-Request_Acreedores/RequestActivityOutput/binaryContent">
                    <binaryContent>
                        <xsl:value-of select="$Send-HTTP-Request_Acreedores/RequestActivityOutput/binaryContent"/>
                    </binaryContent>
                </xsl:if>
                <xsl:if test="$Send-HTTP-Request_Acreedores/RequestActivityOutput/asciiContent">
                    <asciiContent>
                        <xsl:value-of select="$Send-HTTP-Request_Acreedores/RequestActivityOutput/asciiContent"/>
                    </asciiContent>
                </xsl:if>
                <xsl:for-each select="$Send-HTTP-Request_Acreedores/RequestActivityOutput/Headers">
                    <Headers>
                        <xsl:if test="Content-Type">
                            <Content-Type>
                                <xsl:value-of select="Content-Type"/>
                            </Content-Type>
                        </xsl:if>
                        <xsl:if test="Set-Cookie">
                            <Set-Cookie>
                                <xsl:value-of select="Set-Cookie"/>
                            </Set-Cookie>
                        </xsl:if>
                        <xsl:if test="Pragma">
                            <Pragma>
                                <xsl:value-of select="Pragma"/>
                            </Pragma>
                        </xsl:if>
                        <xsl:if test="Location">
                            <Location>
                                <xsl:value-of select="Location"/>
                            </Location>
                        </xsl:if>
                    </Headers>
                </xsl:for-each>
                <xsl:copy-of select="$Send-HTTP-Request_Acreedores/RequestActivityOutput/ns:mimeEnvelopeElement"/>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch_CommunicationExceptions">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1001</pd:x>
        <pd:y>614</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
            <fault>localname=HttpCommunicationException namespace=http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Call_LogRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1140</pd:x>
        <pd:y>362</pd:y>
        <config>
            <processName>/Process/Main/LogRequest.process</processName>
        </config>
        <pd:inputBindings>
            <RequestData>
                <RequertType>
                    <xsl:value-of select="$Call_RequestIdentification/root/RequestType"/>
                </RequertType>
                <RequestFromIP>
                    <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/ns5:Context/RemoteAddress"/>
                </RequestFromIP>
                <WSResponse>
                    <xsl:value-of select="if($Call_RequestIdentification/root/RequestType= &#xA;&#x9;$_globalVariables/ns9:GlobalVariables/EndPoints/Acreedores/RequestType)&#xA;&#x9;then $Send-HTTP-Request_Acreedores/RequestActivityOutput/asciiContent&#xA;else&#xA;&#x9;if($Call_RequestIdentification/root/RequestType = &#xA;&#x9;&#x9;$_globalVariables/ns9:GlobalVariables/EndPoints/Proveedores/RequestType )&#xA;&#x9;then $Send-HTTP-Request_Proveedores/RequestActivityOutput/asciiContent&#xA;&#x9;else&#xA;&#x9;&#x9;if($Call_RequestIdentification/root/RequestType = &#xA;&#x9;&#x9;&#x9;$_globalVariables/ns9:GlobalVariables/EndPoints/ConsultaOC/RequestType)&#xA;&#x9;&#x9;then $Send-HTTP-RequestConsultaOC/RequestActivityOutput/asciiContent&#xA;&#x9;&#x9;else ''"/>
                </WSResponse>
                <PostData>
                    <xsl:value-of select="if(string-length($HTTP-Receiver/ProcessStarterOutput/PostData)>0)&#xA;then $HTTP-Receiver/ProcessStarterOutput/PostData&#xA;else $HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                </PostData>
                <xsl:copy-of select="$Variable0/*"/>
            </RequestData>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send-HTTP-Response-1">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>943</pd:x>
        <pd:y>513</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>HTTP Receiver</eventSource>
            <flushResponse>true</flushResponse>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:if test="$Call_ErrorResponse/Response">
                    <asciiContent>
                        <xsl:value-of select="$Call_ErrorResponse/Response"/>
                    </asciiContent>
                </xsl:if>
                <xsl:for-each select="$HTTP-Receiver/ProcessStarterOutput/Headers">
                    <Headers>
                        <xsl:if test="Content-Type">
                            <Content-Type>
                                <xsl:value-of select="Content-Type"/>
                            </Content-Type>
                        </xsl:if>
                        <xsl:if test="Pragma">
                            <Pragma>
                                <xsl:value-of select="Pragma"/>
                            </Pragma>
                        </xsl:if>
                    </Headers>
                </xsl:for-each>
                <xsl:copy-of select="$HTTP-Receiver/ProcessStarterOutput/ns:mimeEnvelopeElement"/>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_ErrorResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>817</pd:x>
        <pd:y>512</pd:y>
        <config>
            <processName>/Process/SubProcess/ErrorResponse.process</processName>
        </config>
        <pd:inputBindings>
            <Error>
                <Domain>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/Domain"/>
                </Domain>
                <Deployment>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/Deployment"/>
                </Deployment>
                <ProjectName>
                    <xsl:value-of select="$_processContext/ns2:ProcessContext/ProjectName"/>
                </ProjectName>
                <EngineName>
                    <xsl:value-of select="$_processContext/ns2:ProcessContext/EngineName"/>
                </EngineName>
                <TimeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </TimeStamp>
                <Message>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/ErrorResponse/UnsupportedRequest"/>
                </Message>
                <MsgCode>
                    <xsl:value-of select="'HEB-UnssuportedRequest'"/>
                </MsgCode>
            </Error>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_ErrorProcessForCommunicationExceptions">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1124</pd:x>
        <pd:y>615</pd:y>
        <config>
            <processName>/Process/SubProcess/ErrorResponse.process</processName>
        </config>
        <pd:inputBindings>
            <Error>
                <Domain>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/Domain"/>
                </Domain>
                <Deployment>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/Deployment"/>
                </Deployment>
                <ProjectName>
                    <xsl:value-of select="$_processContext/ns2:ProcessContext/ProjectName"/>
                </ProjectName>
                <EngineName>
                    <xsl:value-of select="$_processContext/ns2:ProcessContext/EngineName"/>
                </EngineName>
                <TimeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </TimeStamp>
                <Message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </Message>
                <MsgCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </MsgCode>
            </Error>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send-HTTP-Response_GeneralFailure">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>1246</pd:x>
        <pd:y>614</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>HTTP Receiver</eventSource>
            <flushResponse>true</flushResponse>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <asciiContent>
                    <xsl:value-of select="$Call_ErrorProcessForCommunicationExceptions/Response"/>
                </asciiContent>
                <xsl:for-each select="$HTTP-Receiver/ProcessStarterOutput/Headers">
                    <Headers>
                        <xsl:if test="Content-Type">
                            <Content-Type>
                                <xsl:value-of select="Content-Type"/>
                            </Content-Type>
                        </xsl:if>
                        <xsl:if test="Pragma">
                            <Pragma>
                                <xsl:value-of select="Pragma"/>
                            </Pragma>
                        </xsl:if>
                    </Headers>
                </xsl:for-each>
                <xsl:copy-of select="$HTTP-Receiver/ProcessStarterOutput/ns:mimeEnvelopeElement"/>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_RequestIdentification">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>193</pd:x>
        <pd:y>509</pd:y>
        <config>
            <processName>/Process/SubProcess/RequestIdentification.process</processName>
        </config>
        <pd:inputBindings>
            <Req>
                <Request>
                    <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/PostData"/>
                </Request>
                <URI>
                    <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                </URI>
            </Req>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send-HTTP-Request_Proveedores">
        <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
        <pd:resourceType>httppalette.httpRequest</pd:resourceType>
        <pd:x>570</pd:x>
        <pd:y>322</pd:y>
        <config>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <authScheme>NONE</authScheme>
            <serverhost>%%EndPoints/Proveedores/Host%%</serverhost>
            <serverport>%%EndPoints/Proveedores/Port%%</serverport>
            <useSsl>true</useSsl>
            <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002">
                <ns0:strongCipherSuitesOnly>true</ns0:strongCipherSuitesOnly>
                <ns0:cert isRef="true">/Shared Resources/Certificates/.folder</ns0:cert>
            </ns0:ssl>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
            <OutputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutputHeaders>
        </config>
        <pd:inputBindings>
            <RequestActivityInput>
                <Host>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/Proveedores/Host"/>
                </Host>
                <Port>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/Proveedores/Port"/>
                </Port>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Method">
                    <Method>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Method"/>
                    </Method>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/RequestURI">
                    <RequestURI>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                    </RequestURI>
                </xsl:if>
                <PostData>
                    <xsl:value-of select="$Call_RequestIdentification/root/newPostData"/>
                </PostData>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/QueryString">
                    <QueryString>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/QueryString"/>
                    </QueryString>
                </xsl:if>
                <Headers>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept">
                        <Accept>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept"/>
                        </Accept>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset">
                        <Accept-Charset>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset"/>
                        </Accept-Charset>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding">
                        <Accept-Encoding>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding"/>
                        </Accept-Encoding>
                    </xsl:if>
                    <Content-Type>
                        <xsl:value-of select="concat(&#xA;&#x9;substring-before($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, ';'),&#xA;&#x9;';action=',&#xA;&#x9;substring-after($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, 'action=')&#xA;)"/>
                    </Content-Type>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie">
                        <Cookie>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie"/>
                        </Cookie>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma">
                        <Pragma>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma"/>
                        </Pragma>
                    </xsl:if>
                </Headers>
                <xsl:copy-of select="$HTTP-Receiver/ProcessStarterOutput/ns:mimeEnvelopeElement"/>
            </RequestActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send-HTTP-Response_Proveedores">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>933</pd:x>
        <pd:y>338</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <flushResponse>true</flushResponse>
            <eventSource>HTTP Receiver</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:if test="$Send-HTTP-Request_Proveedores/RequestActivityOutput/binaryContent">
                    <binaryContent>
                        <xsl:value-of select="$Send-HTTP-Request_Proveedores/RequestActivityOutput/binaryContent"/>
                    </binaryContent>
                </xsl:if>
                <xsl:if test="$Send-HTTP-Request_Proveedores/RequestActivityOutput/asciiContent">
                    <asciiContent>
                        <xsl:value-of select="$Send-HTTP-Request_Proveedores/RequestActivityOutput/asciiContent"/>
                    </asciiContent>
                </xsl:if>
                <xsl:for-each select="$Send-HTTP-Request_Proveedores/RequestActivityOutput/Headers">
                    <Headers>
                        <xsl:if test="Content-Type">
                            <Content-Type>
                                <xsl:value-of select="Content-Type"/>
                            </Content-Type>
                        </xsl:if>
                        <xsl:if test="Set-Cookie">
                            <Set-Cookie>
                                <xsl:value-of select="Set-Cookie"/>
                            </Set-Cookie>
                        </xsl:if>
                        <xsl:if test="Pragma">
                            <Pragma>
                                <xsl:value-of select="Pragma"/>
                            </Pragma>
                        </xsl:if>
                        <xsl:if test="Location">
                            <Location>
                                <xsl:value-of select="Location"/>
                            </Location>
                        </xsl:if>
                    </Headers>
                </xsl:for-each>
                <xsl:copy-of select="$Send-HTTP-Request_Proveedores/RequestActivityOutput/ns:mimeEnvelopeElement"/>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send HTTP RequestConsultaOC">
        <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
        <pd:resourceType>httppalette.httpRequest</pd:resourceType>
        <pd:x>429</pd:x>
        <pd:y>227</pd:y>
        <config>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <authScheme>NONE</authScheme>
            <useSsl>true</useSsl>
            <serverhost>%%EndPoints/ConsultaOC/Host%%</serverhost>
            <serverport>%%EndPoints/ConsultaOC/Port%%</serverport>
            <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002">
                <ns0:strongCipherSuitesOnly>true</ns0:strongCipherSuitesOnly>
                <ns0:cert isRef="true">/Shared Resources/Certificates/.folder</ns0:cert>
            </ns0:ssl>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
            <OutputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutputHeaders>
        </config>
        <pd:inputBindings>
            <RequestActivityInput>
                <Host>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/ConsultaOC/Host"/>
                </Host>
                <Port>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/ConsultaOC/Port"/>
                </Port>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Method">
                    <Method>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Method"/>
                    </Method>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/RequestURI">
                    <RequestURI>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                    </RequestURI>
                </xsl:if>
                <PostData>
                    <xsl:value-of select="$Call_RequestIdentification/root/newPostData"/>
                </PostData>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/QueryString">
                    <QueryString>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/QueryString"/>
                    </QueryString>
                </xsl:if>
                <Headers>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept">
                        <Accept>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept"/>
                        </Accept>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset">
                        <Accept-Charset>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset"/>
                        </Accept-Charset>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding">
                        <Accept-Encoding>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding"/>
                        </Accept-Encoding>
                    </xsl:if>
                    <Content-Type>
                        <xsl:value-of select="concat(&#xA;&#x9;substring-before($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, ';'),&#xA;&#x9;';action=',&#xA;&#x9;substring-after($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, 'action=')&#xA;)"/>
                    </Content-Type>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie">
                        <Cookie>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie"/>
                        </Cookie>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma">
                        <Pragma>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma"/>
                        </Pragma>
                    </xsl:if>
                </Headers>
                <xsl:copy-of select="$HTTP-Receiver/ProcessStarterOutput/ns:mimeEnvelopeElement"/>
            </RequestActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send HTTP Response_ConsultaOC">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>937</pd:x>
        <pd:y>232</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>HTTP Receiver</eventSource>
            <flushResponse>true</flushResponse>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:if test="$Send-HTTP-RequestConsultaOC/RequestActivityOutput/binaryContent">
                    <binaryContent>
                        <xsl:value-of select="$Send-HTTP-RequestConsultaOC/RequestActivityOutput/binaryContent"/>
                    </binaryContent>
                </xsl:if>
                <xsl:if test="$Send-HTTP-RequestConsultaOC/RequestActivityOutput/asciiContent">
                    <asciiContent>
                        <xsl:value-of select="$Send-HTTP-RequestConsultaOC/RequestActivityOutput/asciiContent"/>
                    </asciiContent>
                </xsl:if>
                <xsl:for-each select="$Send-HTTP-RequestConsultaOC/RequestActivityOutput/Headers">
                    <Headers>
                        <xsl:if test="Content-Type">
                            <Content-Type>
                                <xsl:value-of select="Content-Type"/>
                            </Content-Type>
                        </xsl:if>
                        <xsl:if test="Set-Cookie">
                            <Set-Cookie>
                                <xsl:value-of select="Set-Cookie"/>
                            </Set-Cookie>
                        </xsl:if>
                        <xsl:if test="Pragma">
                            <Pragma>
                                <xsl:value-of select="Pragma"/>
                            </Pragma>
                        </xsl:if>
                        <xsl:if test="Location">
                            <Location>
                                <xsl:value-of select="Location"/>
                            </Location>
                        </xsl:if>
                    </Headers>
                </xsl:for-each>
                <xsl:copy-of select="$Send-HTTP-RequestConsultaOC/RequestActivityOutput/ns:mimeEnvelopeElement"/>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send HTTP Request_Acreedores">
        <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
        <pd:resourceType>httppalette.httpRequest</pd:resourceType>
        <pd:x>722</pd:x>
        <pd:y>412</pd:y>
        <config>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <authScheme>NONE</authScheme>
            <serverport>%%EndPoints/Acreedores/Port%%</serverport>
            <serverhost>%%EndPoints/Acreedores/Host%%</serverhost>
            <useSsl>true</useSsl>
            <acceptRedirects>false</acceptRedirects>
            <policies>
                <incomingAttachmentPolicy>
                    <writeToFile>false</writeToFile>
                </incomingAttachmentPolicy>
            </policies>
            <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002">
                <ns0:strongCipherSuitesOnly>true</ns0:strongCipherSuitesOnly>
                <ns0:cert isRef="true">/Shared Resources/Certificates/.folder</ns0:cert>
            </ns0:ssl>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
            <OutputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutputHeaders>
        </config>
        <pd:inputBindings>
            <RequestActivityInput>
                <Host>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/Acreedores/Host"/>
                </Host>
                <Port>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/Acreedores/Port"/>
                </Port>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Method">
                    <Method>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Method"/>
                    </Method>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/RequestURI">
                    <RequestURI>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                    </RequestURI>
                </xsl:if>
                <PostData>
                    <xsl:value-of select="$Call_RequestIdentification/root/newPostData"/>
                </PostData>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/QueryString">
                    <QueryString>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/QueryString"/>
                    </QueryString>
                </xsl:if>
                <Headers>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept">
                        <Accept>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept"/>
                        </Accept>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset">
                        <Accept-Charset>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset"/>
                        </Accept-Charset>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding">
                        <Accept-Encoding>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding"/>
                        </Accept-Encoding>
                    </xsl:if>
                    <Content-Type>
                        <xsl:value-of select="concat(&#xA;&#x9;substring-before($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, ';'),&#xA;&#x9;';action=',&#xA;&#x9;substring-after($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, 'action=')&#xA;)"/>
                    </Content-Type>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie">
                        <Cookie>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie"/>
                        </Cookie>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma">
                        <Pragma>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma"/>
                        </Pragma>
                    </xsl:if>
                </Headers>
                <ns:mimeEnvelopeElement>
                    <xsl:copy-of select="$HTTP-Receiver/ProcessStarterOutput/ns:mimeEnvelopeElement/mimePart"/>
                </ns:mimeEnvelopeElement>
            </RequestActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_LogRequestOnFailure">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1134</pd:x>
        <pd:y>494</pd:y>
        <config>
            <processName>/Process/Main/LogRequest.process</processName>
        </config>
        <pd:inputBindings>
            <RequestData>
                <RequertType>
                    <xsl:value-of select="$Call_RequestIdentification/root/RequestType"/>
                </RequertType>
                <RequestFromIP>
                    <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/ns5:Context/RemoteAddress"/>
                </RequestFromIP>
                <WSResponse>
                    <xsl:value-of select="$Call_ErrorProcessForCommunicationExceptions/Response"/>
                </WSResponse>
                <PostData>
                    <xsl:value-of select="if(string-length($HTTP-Receiver/ProcessStarterOutput/PostData)>0)&#xA;then $HTTP-Receiver/ProcessStarterOutput/PostData&#xA;else $HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                </PostData>
            </RequestData>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send HTTP RequestControl">
        <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
        <pd:resourceType>httppalette.httpRequest</pd:resourceType>
        <pd:x>324</pd:x>
        <pd:y>136</pd:y>
        <config>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <authScheme>NONE</authScheme>
            <serverhost>%%EndPoints/Control/Host%%</serverhost>
            <serverport>%%EndPoints/Control/Port%%</serverport>
            <useSsl>true</useSsl>
            <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002">
                <ns0:strongCipherSuitesOnly>true</ns0:strongCipherSuitesOnly>
                <ns0:cert isRef="true">/Shared Resources/Certificates/.folder</ns0:cert>
            </ns0:ssl>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
            <OutputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutputHeaders>
        </config>
        <pd:inputBindings>
            <RequestActivityInput>
                <Host>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/Control/Host"/>
                </Host>
                <Port>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/EndPoints/Control/Port"/>
                </Port>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Method">
                    <Method>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Method"/>
                    </Method>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/RequestURI">
                    <RequestURI>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                    </RequestURI>
                </xsl:if>
                <PostData>
                    <xsl:value-of select="$Call_RequestIdentification/root/newPostData"/>
                </PostData>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/QueryString">
                    <QueryString>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/QueryString"/>
                    </QueryString>
                </xsl:if>
                <Headers>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept">
                        <Accept>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept"/>
                        </Accept>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset">
                        <Accept-Charset>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Charset"/>
                        </Accept-Charset>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding">
                        <Accept-Encoding>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Accept-Encoding"/>
                        </Accept-Encoding>
                    </xsl:if>
                    <Content-Type>
                        <xsl:value-of select="concat(&#xA;&#x9;substring-before($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, ';'),&#xA;&#x9;';action=',&#xA;&#x9;substring-after($HTTP-Receiver/ProcessStarterOutput/Headers/Content-Type, 'action=')&#xA;)"/>
                    </Content-Type>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie">
                        <Cookie>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Cookie"/>
                        </Cookie>
                    </xsl:if>
                    <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma">
                        <Pragma>
                            <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Headers/Pragma"/>
                        </Pragma>
                    </xsl:if>
                </Headers>
                <xsl:copy-of select="$HTTP-Receiver/ProcessStarterOutput/ns:mimeEnvelopeElement"/>
            </RequestActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send HTTP Response_Control">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>946</pd:x>
        <pd:y>134</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>HTTP Receiver</eventSource>
            <flushResponse>true</flushResponse>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:if test="$Send-HTTP-RequestControl/RequestActivityOutput/binaryContent">
                    <binaryContent>
                        <xsl:value-of select="$Send-HTTP-RequestControl/RequestActivityOutput/binaryContent"/>
                    </binaryContent>
                </xsl:if>
                <xsl:if test="$Send-HTTP-RequestControl/RequestActivityOutput/asciiContent">
                    <asciiContent>
                        <xsl:value-of select="$Send-HTTP-RequestControl/RequestActivityOutput/asciiContent"/>
                    </asciiContent>
                </xsl:if>
                <xsl:for-each select="$Send-HTTP-RequestControl/RequestActivityOutput/Headers">
                    <Headers>
                        <xsl:if test="Content-Type">
                            <Content-Type>
                                <xsl:value-of select="Content-Type"/>
                            </Content-Type>
                        </xsl:if>
                        <xsl:if test="Set-Cookie">
                            <Set-Cookie>
                                <xsl:value-of select="Set-Cookie"/>
                            </Set-Cookie>
                        </xsl:if>
                        <xsl:if test="Pragma">
                            <Pragma>
                                <xsl:value-of select="Pragma"/>
                            </Pragma>
                        </xsl:if>
                        <xsl:if test="Location">
                            <Location>
                                <xsl:value-of select="Location"/>
                            </Location>
                        </xsl:if>
                    </Headers>
                </xsl:for-each>
                <xsl:copy-of select="$Send-HTTP-RequestControl/RequestActivityOutput/ns:mimeEnvelopeElement"/>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1143</pd:x>
        <pd:y>727</pd:y>
        <config>
            <processName>/Process/SubProcess/SendException.process</processName>
        </config>
        <pd:inputBindings>
            <Exception>
                <Domain>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/Domain"/>
                </Domain>
                <Deployment>
                    <xsl:value-of select="$_globalVariables/ns9:GlobalVariables/Deployment"/>
                </Deployment>
                <Project>
                    <xsl:value-of select="$_processContext/ns2:ProcessContext/ProjectName"/>
                </Project>
                <EngineName>
                    <xsl:value-of select="$_processContext/ns2:ProcessContext/EngineName"/>
                </EngineName>
                <TimeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </TimeStamp>
                <Code>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </Code>
                <Message>
                    <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport, 0, 0)"/>
                </Message>
            </Exception>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Send HTTP Response_Acreedores</pd:from>
        <pd:to>Call_LogRequest</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch_CommunicationExceptions</pd:from>
        <pd:to>Call_ErrorProcessForCommunicationExceptions</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-HTTP-Response-1</pd:from>
        <pd:to>Call_LogRequest</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ErrorResponse</pd:from>
        <pd:to>Send-HTTP-Response-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ErrorProcessForCommunicationExceptions</pd:from>
        <pd:to>Send-HTTP-Response_GeneralFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-HTTP-Response_GeneralFailure</pd:from>
        <pd:to>Call_LogRequestOnFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns9:GlobalVariables/ErrorResponse/LogFailureRequest = "true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-HTTP-Request_Proveedores</pd:from>
        <pd:to>Send-HTTP-Response_Proveedores</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-HTTP-Response_Proveedores</pd:from>
        <pd:to>Call_LogRequest</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_LogRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_RequestIdentification</pd:from>
        <pd:to>Send-HTTP-Request_Proveedores</pd:to>
        <pd:xpathDescription>FEProveedores</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16776961</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_RequestIdentification/root/RequestType=$_globalVariables/ns9:GlobalVariables/EndPoints/Proveedores/RequestType</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_RequestIdentification</pd:from>
        <pd:to>Send HTTP Request_Acreedores</pd:to>
        <pd:xpathDescription>FEAcreedores</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16737895</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_RequestIdentification/root/RequestType=$_globalVariables/ns9:GlobalVariables/EndPoints/Acreedores/RequestType</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_RequestIdentification</pd:from>
        <pd:to>Call_ErrorResponse</pd:to>
        <pd:xpathDescription>No Soportado</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-13312</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_RequestIdentification/root/RequestType=$_globalVariables/ns9:GlobalVariables/EndPoints/Unknown</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_RequestIdentification</pd:from>
        <pd:to>Send HTTP RequestConsultaOC</pd:to>
        <pd:xpathDescription>Consulta OC</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-13382656</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_RequestIdentification/root/RequestType=$_globalVariables/ns9:GlobalVariables/EndPoints/ConsultaOC/RequestType</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Send HTTP RequestConsultaOC</pd:from>
        <pd:to>Send HTTP Response_ConsultaOC</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send HTTP Response_ConsultaOC</pd:from>
        <pd:to>Call_LogRequest</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send HTTP Request_Acreedores</pd:from>
        <pd:to>Send HTTP Response_Acreedores</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_LogRequestOnFailure</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-HTTP-Response_GeneralFailure</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_RequestIdentification</pd:from>
        <pd:to>Send HTTP RequestControl</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-39373</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_RequestIdentification/root/RequestType=$_globalVariables/ns9:GlobalVariables/EndPoints/Control/RequestType</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Send HTTP RequestControl</pd:from>
        <pd:to>Send HTTP Response_Control</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send HTTP Response_Control</pd:from>
        <pd:to>Call_LogRequest</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch_CommunicationExceptions</pd:from>
        <pd:to>Call Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns9:GlobalVariables/SendException=1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Process</pd:from>
        <pd:to>Send-HTTP-Response_GeneralFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>HTTP Receiver</pd:from>
        <pd:to>Call_RequestIdentification</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>