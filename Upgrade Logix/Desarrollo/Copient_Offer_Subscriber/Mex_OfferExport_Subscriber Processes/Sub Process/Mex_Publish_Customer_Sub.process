<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/ADB/Mex_OfferExport_Sub_Tera_Cfg" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns4="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/ADB/Mex_OfferExport_Sub_ADB_Cfg" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:ns0="http://xmlns.heb.com/ei/ErrorManagementSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema Definitions/Custom/OFFER.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema Definitions/Custom/OFFER.xsd" schemaLocation="/Shared Resources/Schema Definitions/Custom/OFFER.xsd"/>
    <pd:name>Mex_OfferExport_Subscriber Processes/Sub Process/Mex_Publish_Customer_Sub.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:Offer"/>
    <pd:startX>58</pd:startX>
    <pd:startY>280</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>1108</pd:endX>
    <pd:endY>281</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1260391746703</pd:targetNamespace>
    <pd:group name="Customers">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>650</pd:x>
        <pd:y>535</pd:y>
        <pd:width>386</pd:width>
        <pd:height>318</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/Offer/Conditions/Customer</pd:over>
            <pd:iterationElementSlot>current_customer</pd:iterationElementSlot>
            <pd:indexSlot>Customerindex</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Query CPE_RWRD_OPT_DISC</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Load CPE_RWRD_OPT</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Load CPE_INCNT_CUST_GRP_1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Load CPE_INCNT_CUST_GRP_1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Query CPE_RWRD_OPT_DISC</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>Row Exists CPE_RWRD_OPT_DISC</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Query-CPE_RWRD_OPT_DISC/resultSet/Record/OutputColumn1 &gt; 0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Load CPE_RWRD_OPT_DISC</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Load CPE_RWRD_OPT</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Query CPE_RWRD_OPT_DISC</pd:from>
            <pd:to>Load CPE_RWRD_OPT_DISC</pd:to>
            <pd:xpathDescription>Load CPE_RWRD_OPT_DISC</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:activity name="Load CPE_RWRD_OPT">
            <pd:type>com.tibco.plugin.ae.AEPublisherActivity</pd:type>
            <pd:resourceType>ae.aepalette.aePubActivity</pd:resourceType>
            <pd:x>799</pd:x>
            <pd:y>676</pd:y>
            <config>
                <ae.aepalette.sharedProperties.transportChoice>jmsQueue</ae.aepalette.sharedProperties.transportChoice>
                <ae.aepalette.sharedProperties.useRequestReply>false</ae.aepalette.sharedProperties.useRequestReply>
                <ae.aepalette.sharedProperties.adapterService>/Adapter Services/Mex_OfferExport_Sub_ADB_Cfg.adb#adapterService.CpeRwrdOpt_Sub_Svc</ae.aepalette.sharedProperties.adapterService>
                <tpPluginEndpointName>CpeRwrdOpt_Sub_Svc</tpPluginEndpointName>
                <ae.aepalette.sharedProperties.transportType>jmsQueue</ae.aepalette.sharedProperties.transportType>
                <ae.aepalette.sharedProperties.jmsQueueSessionQueue>%%Destinations/Queues/GLB_ADB_CPERWRDOPT_QUEUE%%</ae.aepalette.sharedProperties.jmsQueueSessionQueue>
                <ae.aepalette.sharedProperties.deliveryMode>NONPERSISTENT</ae.aepalette.sharedProperties.deliveryMode>
                <ae.aepalette.sharedProperties.timeToLive>%%ADBTimeToLive%%</ae.aepalette.sharedProperties.timeToLive>
                <ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>QueueConnectionFactory</ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>
                <ae.aepalette.sharedProperties.jmsSessionUsername>%%JmsUser%%</ae.aepalette.sharedProperties.jmsSessionUsername>
                <ae.aepalette.sharedProperties.jmsSessionPassword>%%JmsPassword%%</ae.aepalette.sharedProperties.jmsSessionPassword>
                <ae.aepalette.sharedProperties.jmsSessionProviderURL>%%JmsProviderUrl%%</ae.aepalette.sharedProperties.jmsSessionProviderURL>
                <ae.aepalette.sharedProperties.autoGenClientID>true</ae.aepalette.sharedProperties.autoGenClientID>
                <ae.aepalette.sharedProperties.outputMeta>
                    <aeMeta>/AESchemas/ae/ADB/Mex_OfferExport_Sub_ADB_Cfg.aeschema#class.CPE_RWRD_OPT</aeMeta>
                </ae.aepalette.sharedProperties.outputMeta>
            </config>
            <pd:inputBindings>
                <aePubInputType>
                    <body>
                        <ns4:CPE__RWRD__OPT>
                            <RWRD__OPT__ID>
                                <xsl:value-of select="$current_customer/Customer/RewardOptionID"/>
                            </RWRD__OPT__ID>
                            <xsl:if test="string-length($Start/Offer/Header/IncentiveID)!=0">
                                <INCNT__ID>
                                    <xsl:value-of select="$Start/Offer/Header/IncentiveID"/>
                                </INCNT__ID>
                            </xsl:if>
                            <ADB__OPCODE>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/AdapterConfig/DBSTG/GLB_ADB_OPCODE"/>
                            </ADB__OPCODE>
                        </ns4:CPE__RWRD__OPT>
                    </body>
                </aePubInputType>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Load CPE_INCNT_CUST_GRP_1">
            <pd:type>com.tibco.plugin.ae.AEPublisherActivity</pd:type>
            <pd:resourceType>ae.aepalette.aePubActivity</pd:resourceType>
            <pd:x>800</pd:x>
            <pd:y>599</pd:y>
            <config>
                <ae.aepalette.sharedProperties.transportChoice>jmsQueue</ae.aepalette.sharedProperties.transportChoice>
                <ae.aepalette.sharedProperties.useRequestReply>false</ae.aepalette.sharedProperties.useRequestReply>
                <ae.aepalette.sharedProperties.adapterService>/Adapter Services/Mex_OfferExport_Sub_ADB_Cfg.adb#adapterService.CpeIncntCustGrp_Sub_Svc</ae.aepalette.sharedProperties.adapterService>
                <tpPluginEndpointName>CpeIncntCustGrp_Sub_Svc</tpPluginEndpointName>
                <ae.aepalette.sharedProperties.transportType>jmsQueue</ae.aepalette.sharedProperties.transportType>
                <ae.aepalette.sharedProperties.jmsQueueSessionQueue>%%Destinations/Queues/GLB_ADB_CPEINCNTCUSTGRP_QUEUE%%</ae.aepalette.sharedProperties.jmsQueueSessionQueue>
                <ae.aepalette.sharedProperties.deliveryMode>NONPERSISTENT</ae.aepalette.sharedProperties.deliveryMode>
                <ae.aepalette.sharedProperties.timeToLive>%%ADBTimeToLive%%</ae.aepalette.sharedProperties.timeToLive>
                <ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>QueueConnectionFactory</ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>
                <ae.aepalette.sharedProperties.jmsSessionUsername>%%JmsUser%%</ae.aepalette.sharedProperties.jmsSessionUsername>
                <ae.aepalette.sharedProperties.jmsSessionPassword>%%JmsPassword%%</ae.aepalette.sharedProperties.jmsSessionPassword>
                <ae.aepalette.sharedProperties.jmsSessionProviderURL>%%JmsProviderUrl%%</ae.aepalette.sharedProperties.jmsSessionProviderURL>
                <ae.aepalette.sharedProperties.autoGenClientID>true</ae.aepalette.sharedProperties.autoGenClientID>
                <ae.aepalette.sharedProperties.outputMeta>
                    <aeMeta>/AESchemas/ae/ADB/Mex_OfferExport_Sub_ADB_Cfg.aeschema#class.CPE_INCNT_CUST_GRP</aeMeta>
                </ae.aepalette.sharedProperties.outputMeta>
            </config>
            <pd:inputBindings>
                <aePubInputType>
                    <body>
                        <ns4:CPE__INCNT__CUST__GRP>
                            <INCNT__CUST__ID>
                                <xsl:value-of select="$current_customer/Customer/IncentiveCustomerID"/>
                            </INCNT__CUST__ID>
                            <xsl:if test="string-length($current_customer/Customer/RewardOptionID)!=0">
                                <RWRD__OPT__ID>
                                    <xsl:value-of select="$current_customer/Customer/RewardOptionID"/>
                                </RWRD__OPT__ID>
                            </xsl:if>
                            <xsl:if test="string-length($current_customer/Customer/CustomerGroupID)!=0">
                                <CUST__GRP__ID>
                                    <xsl:value-of select="$current_customer/Customer/CustomerGroupID"/>
                                </CUST__GRP__ID>
                            </xsl:if>
                            <EXCLD__USRS>
                                <xsl:choose>
                                    <xsl:when test="exists(if(lower-case($current_customer/Customer/ExcludedUsers)='true') then 1 else 0)">
                                        <xsl:value-of select="if(lower-case($current_customer/Customer/ExcludedUsers)='true') then 1 else 0"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </EXCLD__USRS>
                            <DELD__SW>
                                <xsl:choose>
                                    <xsl:when test="exists(if(lower-case($current_customer/Customer/Deleted)='true')then 1 else 0)">
                                        <xsl:value-of select="if(lower-case($current_customer/Customer/Deleted)='true')then 1 else 0"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </DELD__SW>
                            <LST__UPDT__TS>
                                <dateTime>
                                    <xsl:value-of select="if(string-length($current_customer/Customer/LastUpdate)) then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime(&quot;MM/dd/yy hh:mm:ss a&quot;,$current_customer/Customer/LastUpdate)) else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,current-dateTime())"/>
                                </dateTime>
                            </LST__UPDT__TS>
                            <COND__NBR>
                                <xsl:value-of select="$current_customer/Customer/ConditionNumber"/>
                            </COND__NBR>
                            <REQ__FRM__TMPLT__SW>
                                <xsl:choose>
                                    <xsl:when test="exists(if(lower-case($current_customer/Customer/RequiredFromTemplate)='true') then 1 else 0)">
                                        <xsl:value-of select="if(lower-case($current_customer/Customer/RequiredFromTemplate)='true') then 1 else 0"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </REQ__FRM__TMPLT__SW>
                            <ADB__OPCODE>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/AdapterConfig/DBSTG/GLB_ADB_OPCODE"/>
                            </ADB__OPCODE>
                        </ns4:CPE__INCNT__CUST__GRP>
                    </body>
                </aePubInputType>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Load CPE_RWRD_OPT_DISC">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>954</pd:x>
            <pd:y>793</pd:y>
            <config>
                <timeout>%%Connections/DB/DBSTG/GLB_TIMEOUT%%</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <statement>INSERT  INTO CPE_RWRD_OPT_DISC (RWRD_OPT_ID,DISC_ID)
VALUES(?,?)</statement>
                <jdbcSharedConfig>/Shared Resources/Connections/Database/DBSTG.sharedjdbc</jdbcSharedConfig>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>RWRD_OPT_ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>DISC_ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <RWRD_OPT_ID>
                        <xsl:choose>
                            <xsl:when test="exists($current_customer/Customer/RewardOptionID)">
                                <xsl:value-of select="$current_customer/Customer/RewardOptionID"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </RWRD_OPT_ID>
                    <DISC_ID>
                        <xsl:choose>
                            <xsl:when test="exists($Start/Offer/Rewards/Discount/DiscountID)">
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/DiscountID"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </DISC_ID>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Query CPE_RWRD_OPT_DISC">
            <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
            <pd:x>730</pd:x>
            <pd:y>792</pd:y>
            <config>
                <timeout>%%Connections/DB/DBSTG/GLB_TIMEOUT%%</timeout>
                <commit>false</commit>
                <maxRows>%%Connections/DB/DBSTG/GLB_MAX_ROWS%%</maxRows>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Shared Resources/Connections/Database/DBSTG.sharedjdbc</jdbcSharedConfig>
                <statement>SELECT COUNT(RWRD_OPT_ID)
FROM CPE_RWRD_OPT_DISC
WHERE
	RWRD_OPT_ID = ?
	AND DISC_ID =?</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>RWRD_OPT_ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>DISC_ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
                <oraObjects/>
                <oraTables/>
                <QueryOutputCachedSchemaColumns>OutputColumn1</QueryOutputCachedSchemaColumns>
                <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
                <QueryOutputCachedSchemaDataTypesName>int</QueryOutputCachedSchemaDataTypesName>
                <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            </config>
            <pd:inputBindings>
                <jdbcQueryActivityInput>
                    <RWRD_OPT_ID>
                        <xsl:value-of select="$current_customer/Customer/RewardOptionID"/>
                    </RWRD_OPT_ID>
                    <DISC_ID>
                        <xsl:value-of select="$Start/Offer/Rewards/Discount/DiscountID"/>
                    </DISC_ID>
                </jdbcQueryActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:group name="LocationGroup">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>322</pd:x>
        <pd:y>43</pd:y>
        <pd:width>281</pd:width>
        <pd:height>207</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/Offer/Auxilary/LocationGroup</pd:over>
            <pd:iterationElementSlot>Curr_Loc_Grp</pd:iterationElementSlot>
            <pd:indexSlot>LocationGrp_Index</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Group</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Group</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:group name="Group">
            <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
            <pd:resourceType>ae.process.group</pd:resourceType>
            <pd:x>370</pd:x>
            <pd:y>84</pd:y>
            <pd:width>172</pd:width>
            <pd:height>129</pd:height>
            <pd:collapsedWidth>57</pd:collapsedWidth>
            <pd:collapsedHeight>70</pd:collapsedHeight>
            <pd:groupVariables/>
            <pd:joinToggle>inherit</pd:joinToggle>
            <config>
                <pd:groupType>inputLoop</pd:groupType>
                <pd:serializable>false</pd:serializable>
                <pd:over>$Curr_Loc_Grp/LocationGroup/Locations/Location</pd:over>
                <pd:iterationElementSlot>curr_loc</pd:iterationElementSlot>
                <pd:indexSlot>index_loc</pd:indexSlot>
                <pd:activityOutputName/>
                <pd:accumulateOutput>false</pd:accumulateOutput>
            </config>
            <pd:inputBindings/>
            <pd:expanded>true</pd:expanded>
            <pd:transition>
                <pd:from>start</pd:from>
                <pd:to>Load CPE_INCNTS</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Load CPE_INCNTS</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:activity name="Load CPE_INCNTS">
                <pd:type>com.tibco.plugin.ae.AEPublisherActivity</pd:type>
                <pd:resourceType>ae.aepalette.aePubActivity</pd:resourceType>
                <pd:x>451</pd:x>
                <pd:y>152</pd:y>
                <config>
                    <ae.aepalette.sharedProperties.transportChoice>jmsQueue</ae.aepalette.sharedProperties.transportChoice>
                    <ae.aepalette.sharedProperties.useRequestReply>false</ae.aepalette.sharedProperties.useRequestReply>
                    <ae.aepalette.sharedProperties.adapterService>/Adapter Services/Mex_OfferExport_Sub_ADB_Cfg.adb#adapterService.CpeIncnts_Sub_Svc</ae.aepalette.sharedProperties.adapterService>
                    <tpPluginEndpointName>CpeIncnts_Sub_Svc</tpPluginEndpointName>
                    <ae.aepalette.sharedProperties.transportType>jmsQueue</ae.aepalette.sharedProperties.transportType>
                    <ae.aepalette.sharedProperties.jmsQueueSessionQueue>%%Destinations/Queues/GLB_ADB_CPEINCNTS_QUEUE%%</ae.aepalette.sharedProperties.jmsQueueSessionQueue>
                    <ae.aepalette.sharedProperties.deliveryMode>NONPERSISTENT</ae.aepalette.sharedProperties.deliveryMode>
                    <ae.aepalette.sharedProperties.timeToLive>%%ADBTimeToLive%%</ae.aepalette.sharedProperties.timeToLive>
                    <ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>QueueConnectionFactory</ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>
                    <ae.aepalette.sharedProperties.jmsSessionUsername>%%JmsUser%%</ae.aepalette.sharedProperties.jmsSessionUsername>
                    <ae.aepalette.sharedProperties.jmsSessionPassword>%%JmsPassword%%</ae.aepalette.sharedProperties.jmsSessionPassword>
                    <ae.aepalette.sharedProperties.jmsSessionProviderURL>%%JmsProviderUrl%%</ae.aepalette.sharedProperties.jmsSessionProviderURL>
                    <ae.aepalette.sharedProperties.autoGenClientID>true</ae.aepalette.sharedProperties.autoGenClientID>
                    <ae.aepalette.sharedProperties.jmsTopicSessionTopic>%%Destinations/Queues/GLB_ADB_CPEINCNTS_QUEUE%%</ae.aepalette.sharedProperties.jmsTopicSessionTopic>
                    <ae.aepalette.sharedProperties.jmsTopicSessionConnectionFactory>TopicConnectionFactory</ae.aepalette.sharedProperties.jmsTopicSessionConnectionFactory>
                    <ae.aepalette.sharedProperties.outputMeta>
                        <aeMeta>/AESchemas/ae/ADB/Mex_OfferExport_Sub_ADB_Cfg.aeschema#class.CPE_INCNTS</aeMeta>
                    </ae.aepalette.sharedProperties.outputMeta>
                </config>
                <pd:inputBindings>
                    <aePubInputType>
                        <body>
                            <ns4:CPE__INCNTS>
                                <INCNT__ID>
                                    <xsl:value-of select="$Start/Offer/Header/IncentiveID"/>
                                </INCNT__ID>
                                <TMPLT__SW>
                                    <xsl:choose>
                                        <xsl:when test="exists(if(lower-case($Start/Offer/Header/IsTemplate)='True')then 1 else 0)">
                                            <xsl:value-of select="if(lower-case($Start/Offer/Header/IsTemplate)='True')then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </TMPLT__SW>
                                <FRM__TMPLT>
                                    <xsl:choose>
                                        <xsl:when test="exists(if(lower-case($Start/Offer/Header/FromTemplate)='True') then 1 else 0)">
                                            <xsl:value-of select="if(lower-case($Start/Offer/Header/FromTemplate)='True') then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </FRM__TMPLT>
                                <INCNT__NM>
                                    <xsl:value-of select="$Start/Offer/Header/IncentiveName"/>
                                </INCNT__NM>
                                <DES>
                                    <xsl:value-of select="$Start/Offer/Header/Description"/>
                                </DES>
                                <xsl:if test="string-length($Start/Offer/Header/PromoClassID)!=0">
                                    <xsl:if test="$Start/Offer/Header/PromoClassID">
                                        <PROMO__CLS__ID>
                                            <xsl:value-of select="$Start/Offer/Header/PromoClassID"/>
                                        </PROMO__CLS__ID>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="string-length($Start/Offer/Header/Priority)!=0">
                                    <PRTY>
                                        <xsl:value-of select="$Start/Offer/Header/Priority"/>
                                    </PRTY>
                                </xsl:if>
                                <STRT__DT>
                                    <dateTime>
                                        <xsl:value-of select="if(string-length ($Start/Offer/Header/StartDate)=0) &#xA;then  tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a','01/01/1800 12:00:00 AM')) &#xA;else concat(substring($Start/Offer/Header/StartDate,1,10),' ',substring($Start/Offer/Header/StartDate,12,8))"/>
                                    </dateTime>
                                </STRT__DT>
                                <END__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(if(string-length ($Start/Offer/Header/EndDate)) &#xA;then  concat(substring($Start/Offer/Header/EndDate,1,10),' ',substring($Start/Offer/Header/EndDate,12,8))&#xA;else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,current-dateTime()))">
                                                <xsl:value-of select="if(string-length ($Start/Offer/Header/EndDate)) &#xA;then  concat(substring($Start/Offer/Header/EndDate,1,10),' ',substring($Start/Offer/Header/EndDate,12,8))&#xA;else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,current-dateTime())"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </END__DT>
                                <xsl:if test="string-length($Start/Offer/Header/EveryDOW)!=0">
                                    <EVERY__DOW>
                                        <xsl:value-of select="$Start/Offer/Header/EveryDOW"/>
                                    </EVERY__DOW>
                                </xsl:if>
                                <ELGBLT__STRT__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/EligibilityStartDate)))">
                                                <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/EligibilityStartDate))"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </ELGBLT__STRT__DT>
                                <ELGBLT__END__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/EligibilityEndDate)))">
                                                <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/EligibilityEndDate))"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </ELGBLT__END__DT>
                                <TSTING__STRT__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/TestingStartDate)))">
                                                <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/TestingStartDate))"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </TSTING__STRT__DT>
                                <TSTING__END__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/TestingEndDate)))">
                                                <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/TestingEndDate))"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </TSTING__END__DT>
                                <xsl:if test="string-length($Start/Offer/Header/P1DistQtyLimit)!=0">
                                    <P1__DSTRB__QTY__LIM>
                                        <xsl:value-of select="$Start/Offer/Header/P1DistQtyLimit"/>
                                    </P1__DSTRB__QTY__LIM>
                                </xsl:if>
                                <xsl:if test="string-length($Start/Offer/Header/P1DistTimeType)!=0">
                                    <P1__DSTRB__TM__TYP>
                                        <xsl:value-of select="$Start/Offer/Header/P1DistTimeType"/>
                                    </P1__DSTRB__TM__TYP>
                                </xsl:if>
                                <xsl:if test="string-length($Start/Offer/Header/P1DistPeriod)!=0">
                                    <P1__DSTRB__PRD>
                                        <xsl:value-of select="$Start/Offer/Header/P1DistPeriod"/>
                                    </P1__DSTRB__PRD>
                                </xsl:if>
                                <xsl:if test="string-length($Start/Offer/Header/P3DistQtyLimit)!=0">
                                    <P3__DSTRB__QTY__LIM>
                                        <xsl:value-of select="$Start/Offer/Header/P3DistQtyLimit"/>
                                    </P3__DSTRB__QTY__LIM>
                                </xsl:if>
                                <xsl:if test="string-length($Start/Offer/Header/P3DistTimeType)!=0">
                                    <P3__DSTRB__TM__TYP>
                                        <xsl:value-of select="$Start/Offer/Header/P3DistTimeType"/>
                                    </P3__DSTRB__TM__TYP>
                                </xsl:if>
                                <xsl:if test="string-length($Start/Offer/Header/P3DistPeriod)!=0">
                                    <P3__DSTRB__PRD>
                                        <xsl:value-of select="$Start/Offer/Header/P3DistPeriod"/>
                                    </P3__DSTRB__PRD>
                                </xsl:if>
                                <REPTNG>
                                    <xsl:choose>
                                        <xsl:when test="exists(if(lower-case($Start/Offer/Header/Reporting)='true') then 1 else 0)">
                                            <xsl:value-of select="if(lower-case($Start/Offer/Header/Reporting)='true') then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </REPTNG>
                                <CRE8D__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(if(string-length ($Start/Offer/Header/CreatedDate))then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/CreatedDate)) else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,current-dateTime()))">
                                                <xsl:value-of select="if(string-length ($Start/Offer/Header/CreatedDate))then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/CreatedDate)) else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,current-dateTime())"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </CRE8D__DT>
                                <LST__UPDT__TS>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(if(string-length($Start/Offer/Header/LastUpdate) ) then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/LastUpdate)) else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,current-dateTime()))">
                                                <xsl:value-of select="if(string-length($Start/Offer/Header/LastUpdate) ) then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/LastUpdate)) else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,current-dateTime())"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </LST__UPDT__TS>
                                <DELD>
                                    <xsl:value-of select="if(string-length($Start/Offer/Header/Deleted) =0) then 0 else $Start/Offer/Header/Deleted"/>
                                </DELD>
                                <STAT__FLAG>
                                    <xsl:value-of select="if (string-length($Start/Offer/Header/StatusFlag)=0) then 0 else $Start/Offer/Header/StatusFlag"/>
                                </STAT__FLAG>
                                <UPDT__LVL>
                                    <xsl:value-of select="if(string-length($Start/Offer/Header/UpdateLevel)=0) then 0 else $Start/Offer/Header/UpdateLevel"/>
                                </UPDT__LVL>
                                <xsl:if test="string-length($Start/Offer/Header/EngineID)!=0">
                                    <CRM__ENGN__ID>
                                        <xsl:value-of select="$Start/Offer/Header/EngineID"/>
                                    </CRM__ENGN__ID>
                                </xsl:if>
                                <CRM__ENGN__UPDT__LVL>
                                    <xsl:value-of select="if(string-length($Start/Offer/Header/CRMEngineUpdateLevel)=0) then 0 else $Start/Offer/Header/CRMEngineUpdateLevel"/>
                                </CRM__ENGN__UPDT__LVL>
                                <xsl:if test="string-length($Start/Offer/Header/CPEOADeployStatus)!=0">
                                    <CPE__OA__DPLY__STAT>
                                        <xsl:value-of select="$Start/Offer/Header/CPEOADeployStatus"/>
                                    </CPE__OA__DPLY__STAT>
                                </xsl:if>
                                <CPE__OA__REPT__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(if(string-length ($Start/Offer/Header/CPEOARptDate) = 0) then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a','01/01/1800 12:00:00 AM')) else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/CPEOARptDate)))">
                                                <xsl:value-of select="if(string-length ($Start/Offer/Header/CPEOARptDate) = 0) then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a','01/01/1800 12:00:00 AM')) else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/CPEOARptDate))"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </CPE__OA__REPT__DT>
                                <CPE__OA__DPLY__SUCCESS__DT>
                                    <dateTime>
                                        <xsl:choose>
                                            <xsl:when test="exists(if(string-length ($Start/Offer/Header/CPEOADeploySuccessDate) = 0) then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a','01/01/1800 12:00:00 AM'))  else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/CPEOADeploySuccessDate)))">
                                                <xsl:value-of select="if(string-length ($Start/Offer/Header/CPEOADeploySuccessDate) = 0) then tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a','01/01/1800 12:00:00 AM'))  else tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;,tib:parse-dateTime('MM/dd/yy hh:mm:ss a',$Start/Offer/Header/CPEOADeploySuccessDate))"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </dateTime>
                                </CPE__OA__DPLY__SUCCESS__DT>
                                <DSABLD__ON__CFW__SW>
                                    <xsl:choose>
                                        <xsl:when test="exists(if(lower-case($Start/Offer/Header/DisabledOnCFW)='true') then 1 else 0)">
                                            <xsl:value-of select="if(lower-case($Start/Offer/Header/DisabledOnCFW)='true') then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </DSABLD__ON__CFW__SW>
                                <ALLOW__OPT__OUT__SW>
                                    <xsl:choose>
                                        <xsl:when test="exists(if(lower-case($Start/Offer/Header/AllowOptOut)='true') then 1 else 0)">
                                            <xsl:value-of select="if(lower-case($Start/Offer/Header/AllowOptOut)='true') then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ALLOW__OPT__OUT__SW>
                                <EMPLS__ONLY__SW>
                                    <xsl:choose>
                                        <xsl:when test="exists(if (lower-case($Start/Offer/Header/EmployeesOnly)='true') then 1 else 0)">
                                            <xsl:value-of select="if (lower-case($Start/Offer/Header/EmployeesOnly)='true') then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </EMPLS__ONLY__SW>
                                <EMPLS__EXCLD__SW>
                                    <xsl:choose>
                                        <xsl:when test="exists(if (lower-case($Start/Offer/Header/EmployeesExcluded)='true') then 1 else 0)">
                                            <xsl:value-of select="if (lower-case($Start/Offer/Header/EmployeesExcluded)='true') then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </EMPLS__EXCLD__SW>
                                <xsl:if test="string-length($Start/Offer/Header/CreatedByAdminID)!=0">
                                    <CRE8D__BY__ADMIN__ID>
                                        <xsl:value-of select="$Start/Offer/Header/CreatedByAdminID"/>
                                    </CRE8D__BY__ADMIN__ID>
                                </xsl:if>
                                <xsl:if test="string-length($Start/Offer/Header/LastUpdatedByAdminID)!=0">
                                    <LST__UPDTD__BY__ADMIN__ID>
                                        <xsl:value-of select="$Start/Offer/Header/LastUpdatedByAdminID"/>
                                    </LST__UPDTD__BY__ADMIN__ID>
                                </xsl:if>
                                <DEFER__CALC__TO__EOS__SW>
                                    <xsl:choose>
                                        <xsl:when test="exists(if(lower-case($Start/Offer/Header/DeferCalcToEOS)='true') then 1 else 0)">
                                            <xsl:value-of select="if(lower-case($Start/Offer/Header/DeferCalcToEOS)='true') then 1 else 0"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </DEFER__CALC__TO__EOS__SW>
                                <SND__ISSNC>
                                    <xsl:value-of select="if(string-length($Start/Offer/Header/SendIssuance) = 0) then 0 else $Start/Offer/Header/SendIssuance"/>
                                </SND__ISSNC>
                                <xsl:if test="string-length($Start/Offer/Header/EveryTOD)!=0">
                                    <EVERY__TOD>
                                        <xsl:value-of select="$Start/Offer/Header/EveryTOD"/>
                                    </EVERY__TOD>
                                </xsl:if>
                                <BANNER__ID>
                                    <xsl:value-of select="$curr_loc/Location/Header/BannerID"/>
                                </BANNER__ID>
                                <ADB__OPCODE>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/AdapterConfig/DBSTG/GLB_ADB_OPCODE"/>
                                </ADB__OPCODE>
                            </ns4:CPE__INCNTS>
                        </body>
                    </aePubInputType>
                </pd:inputBindings>
            </pd:activity>
        </pd:group>
    </pd:group>
    <pd:activity name="Load CPE_DISC">
        <pd:type>com.tibco.plugin.ae.AEPublisherActivity</pd:type>
        <pd:resourceType>ae.aepalette.aePubActivity</pd:resourceType>
        <pd:x>724</pd:x>
        <pd:y>286</pd:y>
        <config>
            <ae.aepalette.sharedProperties.transportChoice>jmsQueue</ae.aepalette.sharedProperties.transportChoice>
            <ae.aepalette.sharedProperties.useRequestReply>false</ae.aepalette.sharedProperties.useRequestReply>
            <ae.aepalette.sharedProperties.adapterService>/Adapter Services/Mex_OfferExport_Sub_ADB_Cfg.adb#adapterService.CpeDisc_Sub_Svc</ae.aepalette.sharedProperties.adapterService>
            <tpPluginEndpointName>CpeDisc_Sub_Svc</tpPluginEndpointName>
            <ae.aepalette.sharedProperties.transportType>jmsQueue</ae.aepalette.sharedProperties.transportType>
            <ae.aepalette.sharedProperties.jmsQueueSessionQueue>%%Destinations/Queues/GLB_ADB_CPEDISC_QUEUE%%</ae.aepalette.sharedProperties.jmsQueueSessionQueue>
            <ae.aepalette.sharedProperties.deliveryMode>NONPERSISTENT</ae.aepalette.sharedProperties.deliveryMode>
            <ae.aepalette.sharedProperties.timeToLive>%%ADBTimeToLive%%</ae.aepalette.sharedProperties.timeToLive>
            <ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>QueueConnectionFactory</ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>
            <ae.aepalette.sharedProperties.jmsSessionUsername>%%JmsUser%%</ae.aepalette.sharedProperties.jmsSessionUsername>
            <ae.aepalette.sharedProperties.jmsSessionPassword>%%JmsPassword%%</ae.aepalette.sharedProperties.jmsSessionPassword>
            <ae.aepalette.sharedProperties.jmsSessionProviderURL>%%JmsProviderUrl%%</ae.aepalette.sharedProperties.jmsSessionProviderURL>
            <ae.aepalette.sharedProperties.autoGenClientID>true</ae.aepalette.sharedProperties.autoGenClientID>
            <ae.aepalette.sharedProperties.outputMeta>
                <aeMeta>/AESchemas/ae/ADB/Mex_OfferExport_Sub_ADB_Cfg.aeschema#class.CPE_DISC</aeMeta>
            </ae.aepalette.sharedProperties.outputMeta>
        </config>
        <pd:inputBindings>
            <aePubInputType>
                <body>
                    <ns4:CPE__DISC>
                        <DISC__ID>
                            <xsl:value-of select="$Start/Offer/Rewards/Discount/DiscountID"/>
                        </DISC__ID>
                        <DISC__NM>
                            <xsl:value-of select="$Start/Offer/Rewards/Discount/Name"/>
                        </DISC__NM>
                        <DISC__TYP__ID>
                            <xsl:value-of select="if(string-length($Start/Offer/Rewards/Discount/DiscountTypeID)=0) then 0 else $Start/Offer/Rewards/Discount/DiscountTypeID"/>
                        </DISC__TYP__ID>
                        <RCPT__DES>
                            <xsl:value-of select="$Start/Offer/Rewards/Discount/ReceiptDescription"/>
                        </RCPT__DES>
                        <SPECIFY__BARCD>
                            <xsl:choose>
                                <xsl:when test="exists(if (lower-case($Start/Offer/Rewards/Discount/SpecifyBarcode)='true') then 1 else 0)">
                                    <xsl:value-of select="if (lower-case($Start/Offer/Rewards/Discount/SpecifyBarcode)='true') then 1 else 0"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </SPECIFY__BARCD>
                        <DISC__BARCD>
                            <xsl:value-of select="$Start/Offer/Rewards/Discount/DiscountBarcode"/>
                        </DISC__BARCD>
                        <VOID__BARCD>
                            <xsl:value-of select="$Start/Offer/Rewards/Discount/VoidBarcode"/>
                        </VOID__BARCD>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/DiscountedProductGroupID)!=0">
                            <DISCED__PROD__GRP__ID>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/DiscountedProductGroupID"/>
                            </DISCED__PROD__GRP__ID>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/ExcludedProductGroupID)!=0">
                            <EXCLD__PROD__GRP__ID>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/ExcludedProductGroupID"/>
                            </EXCLD__PROD__GRP__ID>
                        </xsl:if>
                        <BEST__DEAL__SW>
                            <xsl:choose>
                                <xsl:when test="exists(if (lower-case($Start/Offer/Rewards/Discount/BestDeal)='true') then 1 else 0)">
                                    <xsl:value-of select="if (lower-case($Start/Offer/Rewards/Discount/BestDeal)='true') then 1 else 0"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </BEST__DEAL__SW>
                        <ALLOW__NEG__SW>
                            <xsl:choose>
                                <xsl:when test="exists(if (lower-case($Start/Offer/Rewards/Discount/AllowNegative)='true') then 1 else 0)">
                                    <xsl:value-of select="if (lower-case($Start/Offer/Rewards/Discount/AllowNegative)='true') then 1 else 0"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </ALLOW__NEG__SW>
                        <COMPUTE__DISC>
                            <xsl:choose>
                                <xsl:when test="exists(if (lower-case($Start/Offer/Rewards/Discount/ComputeDiscount)='true') then 1 else 0)">
                                    <xsl:value-of select="if (lower-case($Start/Offer/Rewards/Discount/ComputeDiscount)='true') then 1 else 0"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </COMPUTE__DISC>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/DiscountAmount)!=0">
                            <DISC__AMT>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/DiscountAmount"/>
                            </DISC__AMT>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/AmountTypeID)!=0">
                            <AMT__TYP__ID>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/AmountTypeID"/>
                            </AMT__TYP__ID>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/L1Cap)!=0">
                            <L1__CAP>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/L1Cap"/>
                            </L1__CAP>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/L2DiscountAmt)!=0">
                            <xsl:if test="$Start/Offer/Rewards/Discount/L2DiscountAmt">
                                <L2__DISC__AMT>
                                    <xsl:value-of select="$Start/Offer/Rewards/Discount/L2DiscountAmt"/>
                                </L2__DISC__AMT>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/L2AmountTypeID)!=0">
                            <L2__AMT__TYP__ID>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/L2AmountTypeID"/>
                            </L2__AMT__TYP__ID>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/L2Cap)!=0">
                            <L2__CAP>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/L2Cap"/>
                            </L2__CAP>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/L3DiscountAmt)!=0">
                            <L3__DISC__AMT>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/L3DiscountAmt"/>
                            </L3__DISC__AMT>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/L3AmountTypeID)!=0">
                            <L3__AMT__TYP__ID>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/L3AmountTypeID"/>
                            </L3__AMT__TYP__ID>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/ItemLimit)!=0">
                            <ITM__LIM>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/ItemLimit"/>
                            </ITM__LIM>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/WeightLimit)!=0">
                            <WT__LIM>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/WeightLimit"/>
                            </WT__LIM>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/DollarLimit)!=0">
                            <DOL__LIM>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/DollarLimit"/>
                            </DOL__LIM>
                        </xsl:if>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/ChargebackDeptID)!=0">
                            <CHRGBACK__DEPT__ID>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/ChargebackDeptID"/>
                            </CHRGBACK__DEPT__ID>
                        </xsl:if>
                        <DECLINING__BAL>
                            <xsl:choose>
                                <xsl:when test="exists(if (lower-case($Start/Offer/Rewards/Discount/DecliningBalance)='true') then 1 else 0)">
                                    <xsl:value-of select="if (lower-case($Start/Offer/Rewards/Discount/DecliningBalance)='true') then 1 else 0"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </DECLINING__BAL>
                        <RETROACTV__DISC>
                            <xsl:choose>
                                <xsl:when test="exists(if (lower-case($Start/Offer/Rewards/Discount/RetroactiveDiscount)='true') then 1 else 0)">
                                    <xsl:value-of select="if (lower-case($Start/Offer/Rewards/Discount/RetroactiveDiscount)='true') then 1 else 0"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </RETROACTV__DISC>
                        <xsl:if test="string-length($Start/Offer/Rewards/Discount/UserGroupID)!=0">
                            <USR__GRP__ID>
                                <xsl:value-of select="$Start/Offer/Rewards/Discount/UserGroupID"/>
                            </USR__GRP__ID>
                        </xsl:if>
                        <ADB__OPCODE>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/AdapterConfig/DBSTG/GLB_ADB_OPCODE"/>
                        </ADB__OPCODE>
                    </ns4:CPE__DISC>
                </body>
            </aePubInputType>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>971</pd:x>
        <pd:y>281</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="JDBC-DELETE-CPE_INCNT_CUST_GRP">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>63</pd:x>
        <pd:y>701</pd:y>
        <config>
            <timeout>%%Connections/DB/DBSTG/GLB_TIMEOUT%%</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Shared Resources/Connections/Database/DBSTG.sharedjdbc</jdbcSharedConfig>
            <statement>DELETE FROM [dbo].[CPE_INCNT_CUST_GRP]
WHERE RWRD_OPT_ID = ?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>RWRD_OPT_ID</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <RWRD_OPT_ID>
                    <xsl:choose>
                        <xsl:when test="exists($Start/Offer/Conditions/Customer[1]/RewardOptionID)">
                            <xsl:value-of select="$Start/Offer/Conditions/Customer[1]/RewardOptionID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </RWRD_OPT_ID>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="CustomerGroups">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>124</pd:x>
        <pd:y>285</pd:y>
        <pd:width>504</pd:width>
        <pd:height>400</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/Offer/Auxilary/CustomerGroup</pd:over>
            <pd:iterationElementSlot>current_CustomerGroup</pd:iterationElementSlot>
            <pd:indexSlot>CustomerGrpIndex</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Load-CPE_CUST_GRP-1</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Customers Parse Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GroupByAndCustomers</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Load-CPE_CUST_GRP-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Customers Parse Data</pd:from>
            <pd:to>JDBC Update</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JDBC Update</pd:from>
            <pd:to>GroupByAndCustomers</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:group name="GroupByAndCustomers">
            <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
            <pd:resourceType>ae.process.group</pd:resourceType>
            <pd:x>359</pd:x>
            <pd:y>334</pd:y>
            <pd:width>224</pd:width>
            <pd:height>322</pd:height>
            <pd:collapsedWidth>57</pd:collapsedWidth>
            <pd:collapsedHeight>70</pd:collapsedHeight>
            <pd:groupVariables/>
            <pd:joinToggle>inherit</pd:joinToggle>
            <config>
                <pd:groupType>inputLoop</pd:groupType>
                <pd:serializable>false</pd:serializable>
                <pd:over>$Customers-Parse-Data/Output/Rows/Customer</pd:over>
                <pd:iterationElementSlot>current_GroupByAndCustomers</pd:iterationElementSlot>
                <pd:indexSlot>GroupByAndCustomersIndex</pd:indexSlot>
                <pd:activityOutputName/>
                <pd:accumulateOutput>false</pd:accumulateOutput>
            </config>
            <pd:inputBindings/>
            <pd:expanded>true</pd:expanded>
            <pd:transition>
                <pd:from>start</pd:from>
                <pd:to>Load CPE_CUST_GRP_CUSTOMER</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Load CPE_CUST_GRP_CUSTOMER</pd:from>
                <pd:to>end</pd:to>
                <pd:xpathDescription>Success1</pd:xpathDescription>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Null-1</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Load CPE_CUST_GRP_CUSTOMER</pd:from>
                <pd:to>Null-1</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-65536</pd:lineColor>
                <pd:conditionType>error</pd:conditionType>
            </pd:transition>
            <pd:activity name="Load CPE_CUST_GRP_CUSTOMER">
                <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
                <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
                <pd:x>440</pd:x>
                <pd:y>584</pd:y>
                <config>
                    <timeout>%%Connections/DB/DBSTG/GLB_TIMEOUT%%</timeout>
                    <commit>false</commit>
                    <emptyStrAsNil>false</emptyStrAsNil>
                    <statement>INSERT INTO CPE_CUST_GRP_CUSTOMER(CUST_GRP_ID,CUST_ID)
VALUES(?,?)</statement>
                    <jdbcSharedConfig>/Shared Resources/Connections/Database/DBSTG.sharedjdbc</jdbcSharedConfig>
                    <Prepared_Param_DataType>
                        <parameter>
                            <parameterName>CUST_GRP_ID</parameterName>
                            <dataType>INTEGER</dataType>
                        </parameter>
                        <parameter>
                            <parameterName>CUST_ID</parameterName>
                            <dataType>VARCHAR</dataType>
                        </parameter>
                    </Prepared_Param_DataType>
                </config>
                <pd:inputBindings>
                    <jdbcUpdateActivityInput>
                        <CUST_GRP_ID>
                            <xsl:value-of select="$current_CustomerGroup/CustomerGroup/Header/CustomerGroupID"/>
                        </CUST_GRP_ID>
                        <CUST_ID>
                            <xsl:value-of select="$current_GroupByAndCustomers/Customer/strCustomer[1]"/>
                        </CUST_ID>
                    </jdbcUpdateActivityInput>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Null-1">
                <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
                <pd:resourceType>ae.activities.null</pd:resourceType>
                <pd:x>442</pd:x>
                <pd:y>416</pd:y>
                <config/>
                <pd:inputBindings/>
            </pd:activity>
        </pd:group>
        <pd:activity name="Load-CPE_CUST_GRP-1">
            <pd:type>com.tibco.plugin.ae.AEPublisherActivity</pd:type>
            <pd:resourceType>ae.aepalette.aePubActivity</pd:resourceType>
            <pd:x>209</pd:x>
            <pd:y>340</pd:y>
            <config>
                <ae.aepalette.sharedProperties.transportChoice>jmsQueue</ae.aepalette.sharedProperties.transportChoice>
                <ae.aepalette.sharedProperties.useRequestReply>false</ae.aepalette.sharedProperties.useRequestReply>
                <ae.aepalette.sharedProperties.adapterService>/Adapter Services/Mex_OfferExport_Sub_ADB_Cfg.adb#adapterService.CpeCustGrp_Sub_Svc</ae.aepalette.sharedProperties.adapterService>
                <tpPluginEndpointName>CpeCustGrp_Sub_Svc</tpPluginEndpointName>
                <ae.aepalette.sharedProperties.transportType>jmsQueue</ae.aepalette.sharedProperties.transportType>
                <ae.aepalette.sharedProperties.jmsQueueSessionQueue>%%Destinations/Queues/GLB_ADB_CPECUSTGRP_QUEUE%%</ae.aepalette.sharedProperties.jmsQueueSessionQueue>
                <ae.aepalette.sharedProperties.deliveryMode>NONPERSISTENT</ae.aepalette.sharedProperties.deliveryMode>
                <ae.aepalette.sharedProperties.timeToLive>%%ADBTimeToLive%%</ae.aepalette.sharedProperties.timeToLive>
                <ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>QueueConnectionFactory</ae.aepalette.sharedProperties.jmsQueueSessionConnectionFactory>
                <ae.aepalette.sharedProperties.jmsSessionUsername>%%JmsUser%%</ae.aepalette.sharedProperties.jmsSessionUsername>
                <ae.aepalette.sharedProperties.jmsSessionPassword>%%JmsPassword%%</ae.aepalette.sharedProperties.jmsSessionPassword>
                <ae.aepalette.sharedProperties.jmsSessionProviderURL>%%JmsProviderUrl%%</ae.aepalette.sharedProperties.jmsSessionProviderURL>
                <ae.aepalette.sharedProperties.autoGenClientID>true</ae.aepalette.sharedProperties.autoGenClientID>
                <ae.aepalette.sharedProperties.outputMeta>
                    <aeMeta>/AESchemas/ae/ADB/Mex_OfferExport_Sub_ADB_Cfg.aeschema#class.CPE_CUST_GRP</aeMeta>
                </ae.aepalette.sharedProperties.outputMeta>
            </config>
            <pd:inputBindings>
                <aePubInputType>
                    <body>
                        <ns4:CPE__CUST__GRP>
                            <xsl:if test="$current_CustomerGroup/CustomerGroup/Header/CustomerGroupID">
                                <CUST__GRP__ID>
                                    <xsl:value-of select="$current_CustomerGroup/CustomerGroup/Header/CustomerGroupID"/>
                                </CUST__GRP__ID>
                            </xsl:if>
                            <CUST__GRP__NM>
                                <xsl:value-of select="if(string-length($current_CustomerGroup/CustomerGroup/Header/Name) = 0 ) then ' ' else $current_CustomerGroup/CustomerGroup/Header/Name"/>
                            </CUST__GRP__NM>
                            <ADB__OPCODE>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/AdapterConfig/DBSTG/GLB_ADB_OPCODE"/>
                            </ADB__OPCODE>
                        </ns4:CPE__CUST__GRP>
                    </body>
                </aePubInputType>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Customers Parse Data">
            <pd:type>com.tibco.plugin.parse.ParseActivity</pd:type>
            <pd:resourceType>ae.activities.ParseActivity</pd:resourceType>
            <pd:x>205</pd:x>
            <pd:y>505</pd:y>
            <config>
                <InputType>String</InputType>
                <Encoding>ASCII</Encoding>
                <ParseSharedConfig>/Shared Resources/Schema Definitions/Custom/Customer Data Format.sharedparse</ParseSharedConfig>
            </config>
            <pd:inputBindings>
                <Input>
                    <text>
                        <xsl:value-of select="$current_CustomerGroup/CustomerGroup/Customers"/>
                    </text>
                    <noOfRecords>
                        <xsl:value-of select="-1"/>
                    </noOfRecords>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JDBC Update">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>303</pd:x>
            <pd:y>498</pd:y>
            <config>
                <timeout>%%Connections/DB/DBSTG/GLB_TIMEOUT%%</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Shared Resources/Connections/Database/DBSTG.sharedjdbc</jdbcSharedConfig>
                <statement>DELETE FROM [dbo].[CPE_CUST_GRP_CUSTOMER]
WHERE CUST_GRP_ID = ?</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>CUST_GRP_ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <CUST_GRP_ID>
                        <xsl:choose>
                            <xsl:when test="exists($current_CustomerGroup/CustomerGroup/Header/CustomerGroupID)">
                                <xsl:value-of select="$current_CustomerGroup/CustomerGroup/Header/CustomerGroupID"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </CUST_GRP_ID>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Load CPE_DISC</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Load CPE_DISC</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>JDBC-DELETE-CPE_INCNT_CUST_GRP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Customers</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>LocationGroup</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LocationGroup</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC-DELETE-CPE_INCNT_CUST_GRP</pd:from>
        <pd:to>Customers</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>CustomerGroups</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CustomerGroups</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>