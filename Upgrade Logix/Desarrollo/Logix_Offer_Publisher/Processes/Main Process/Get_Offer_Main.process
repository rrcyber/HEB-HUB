<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://xmlns.heb.com/ei/ErrorManagementSchema" xmlns:pfx="http://xmlns.heb.com/ei/OFFER_LIST_RESPONSE" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns0="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="com/tibco/pe/commands" xmlns:pfx4="http://xmlns.heb.com/ei/error" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema Definitions/Custom/OFFER.xsd" xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema Definitions/Common/Exception.xsd">
    <xsd:import namespace="http://xmlns.heb.com/ei/OFFER_LIST_RESPONSE" schemaLocation="/Shared Resources/Schema Definitions/Custom/OFFER_LIST_RESPONSE.xsd"/>
    <xsd:import namespace="http://xmlns.heb.com/ei/ErrorManagementSchema" schemaLocation="/Shared Resources/Schema Definitions/Common/ErrorManagementSchema_SOAP.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema Definitions/Custom/OFFER.xsd" schemaLocation="/Shared Resources/Schema Definitions/Custom/OFFER.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Shared Resources/Schema Definitions/Common/Exception.xsd" schemaLocation="/Shared Resources/Schema Definitions/Common/Exception.xsd"/>
    <pd:name>Processes/Main Process/Get_Offer_Main.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="param" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>28</pd:startX>
    <pd:startY>389</pd:startY>
    <pd:returnBindings>
        <pfx:GET_OFFER_LIST_RESPONSE>
            <xsl:copy-of select="$concentrado/AccumulatedOutput/Offer"/>
        </pfx:GET_OFFER_LIST_RESPONSE>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endX>1542</pd:endX>
    <pd:endY>392</pd:endY>
    <pd:errorSchemas>
        <Exception ref="pfx6:Exception"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1403107738322</pd:targetNamespace>
    <pd:activity name="Get_CpeIncnts">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>309</pd:x>
        <pd:y>392</pd:y>
        <config>
            <processName>/Processes/Sub Process/Get_CpeIncnts.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <FECHA_INICIAL>
                    <xsl:value-of select="$Get_DateInitial/Initial_Date"/>
                </FECHA_INICIAL>
                <param>
                    <xsl:value-of select="$Start/root/param"/>
                </param>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="CPE_INCNTS_GROUP">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>506</pd:x>
        <pd:y>71</pd:y>
        <pd:width>826</pd:width>
        <pd:height>628</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Get_CpeIncnts/resultSet/Record</pd:over>
            <pd:iterationElementSlot>iterator</pd:iterationElementSlot>
            <pd:indexSlot>index</pd:indexSlot>
            <pd:outSlot>concentrado</pd:outSlot>
            <pd:activityOutputName>Map Offer</pd:activityOutputName>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get_Discounts</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get_IncentiveProductGroups</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get_Terminals</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get_RewardOptions</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get_Locations</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get_CustomerGroups</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get_GroupProducts</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Set_DateInitial</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetSimpleMessage</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>Only Star Change Products</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get_IncentiveProductGroups</pd:from>
            <pd:to>transition 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get_GroupProducts</pd:from>
            <pd:to>transition 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get_Discounts</pd:from>
            <pd:to>transition 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get_RewardOptions</pd:from>
            <pd:to>transition 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get_Locations</pd:from>
            <pd:to>transition 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get_Terminals</pd:from>
            <pd:to>transition 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Offer</pd:from>
            <pd:to>Generate Error 1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Offer</pd:from>
            <pd:to>Render XML</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Render XML</pd:from>
            <pd:to>Generate Error 1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get_CustomerGroups</pd:from>
            <pd:to>transition 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Topic Publisher</pd:from>
            <pd:to>Generate Error 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Render XML</pd:from>
            <pd:to>JMS Topic Publisher</pd:to>
            <pd:xpathDescription>Promotion Two Targets</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Start/root/param=0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>transition 2</pd:from>
            <pd:to>Map Offer</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Topic Publisher</pd:from>
            <pd:to>GetSimpleMessage</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetSimpleMessage</pd:from>
            <pd:to>Set_DateInitial</pd:to>
            <pd:xpathDescription>Promotion Two Targets</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Start/root/param=0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>GetSimpleMessage</pd:from>
            <pd:to>Generate Error 2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-3407872</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Render XML</pd:from>
            <pd:to>GetSimpleMessage</pd:to>
            <pd:xpathDescription>Only Star Change Products</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:activity name="Map Offer">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>886</pd:x>
            <pd:y>403</pd:y>
            <config>
                <element ref="pfx2:Offer"/>
            </config>
            <pd:inputBindings>
                <Offer>
                    <Header>
                        <IncentiveID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int64'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                        </IncentiveID>
                        <EngineID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EngineID"/>
                        </EngineID>
                        <IsTemplate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IsTemplate"/>
                        </IsTemplate>
                        <FromTemplate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/FromTemplate"/>
                        </FromTemplate>
                        <ClientOfferID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/ClientOfferID"/>
                        </ClientOfferID>
                        <IncentiveName>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveName"/>
                        </IncentiveName>
                        <Description>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/Description"/>
                        </Description>
                        <PromoClassID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/PromoClassID"/>
                        </PromoClassID>
                        <Priority>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="if (string-length($Get_CpeIncnts/resultSet/Record[$index]/Priority)!=0) then&#xA;$Get_CpeIncnts/resultSet/Record[$index]/Priority&#xA;else&#xA;2"/>
                        </Priority>
                        <StartDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$iterator/Record/StartDate"/>
                        </StartDate>
                        <EndDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$iterator/Record/EndDate"/>
                        </EndDate>
                        <EveryDOW>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EveryDOW"/>
                        </EveryDOW>
                        <EligibilityStartDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/EligibilityStartDate)"/>
                        </EligibilityStartDate>
                        <EligibilityEndDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/EligibilityEndDate)"/>
                        </EligibilityEndDate>
                        <TestingStartDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/TestingStartDate)"/>
                        </TestingStartDate>
                        <TestingEndDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/TestingEndDate)"/>
                        </TestingEndDate>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/P1DistQtyLimit)!=0">
                            <P1DistQtyLimit>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P1DistQtyLimit"/>
                            </P1DistQtyLimit>
                        </xsl:if>
                        <P1DistTimeType>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P1DistTimeType"/>
                        </P1DistTimeType>
                        <P1DistPeriod>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P1DistPeriod"/>
                        </P1DistPeriod>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/P2DistQtyLimit)!=0">
                            <P2DistQtyLimit>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P2DistQtyLimit"/>
                            </P2DistQtyLimit>
                        </xsl:if>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/P2DistTimeType)!=0">
                            <P2DistTimeType>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P2DistTimeType"/>
                            </P2DistTimeType>
                        </xsl:if>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/P2DistPeriod)!=0">
                            <P2DistPeriod>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P2DistPeriod"/>
                            </P2DistPeriod>
                        </xsl:if>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/P3DistQtyLimit)!=0">
                            <P3DistQtyLimit>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P3DistQtyLimit"/>
                            </P3DistQtyLimit>
                        </xsl:if>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/P3DistTimeType)!=0">
                            <P3DistTimeType>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P3DistTimeType"/>
                            </P3DistTimeType>
                        </xsl:if>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/P3DistPeriod)!=0">
                            <P3DistPeriod>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/P3DistPeriod"/>
                            </P3DistPeriod>
                        </xsl:if>
                        <EnableRedeemRpt>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EnableRedeemRpt"/>
                        </EnableRedeemRpt>
                        <CreatedDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/CreatedDate)"/>
                        </CreatedDate>
                        <LastUpdate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/LastUpdate)"/>
                        </LastUpdate>
                        <Deleted>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="if($Get_CpeIncnts/resultSet/Record/Deleted = 'true')&#xA;then &#xA;1&#xA;else&#xA;0"/>
                        </Deleted>
                        <xsl:if test="string-length($Get_CpeIncnts/resultSet/Record[$index]/CRMRestricted)!=0">
                            <CRMRestricted>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/CRMRestricted"/>
                            </CRMRestricted>
                        </xsl:if>
                        <StatusFlag>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/StatusFlag"/>
                        </StatusFlag>
                        <UpdateLevel>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/UpdateLevel"/>
                        </UpdateLevel>
                        <CRMEngineID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/CRMEngineID"/>
                        </CRMEngineID>
                        <CRMEngineUpdateLevel>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/CRMEngineUpdateLevel"/>
                        </CRMEngineUpdateLevel>
                        <CPEOADeployRpt>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/CPEOADeployRpt"/>
                        </CPEOADeployRpt>
                        <CPEOADeployStatus>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/CPEOADeployStatus"/>
                        </CPEOADeployStatus>
                        <CPEOARptDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/CPEOARptDate)"/>
                        </CPEOARptDate>
                        <CPEOADeploySuccessDate>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'DateTime'"/>
                            </xsl:attribute>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_CpeIncnts/resultSet/Record[$index]/CPEOADeploySuccessDate)"/>
                        </CPEOADeploySuccessDate>
                        <DisabledOnCFW>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/DisabledOnCFW"/>
                        </DisabledOnCFW>
                        <AllowOptOut>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/AllowOptOut"/>
                        </AllowOptOut>
                        <EmployeesOnly>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EmployeesOnly"/>
                        </EmployeesOnly>
                        <EmployeesExcluded>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EmployeesExcluded"/>
                        </EmployeesExcluded>
                        <DeferCalcToEOS>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/DeferCalcToEOS"/>
                        </DeferCalcToEOS>
                        <CreatedByAdminID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/CreatedByAdminID"/>
                        </CreatedByAdminID>
                        <LastUpdatedByAdminID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/LastUpdatedByAdminID"/>
                        </LastUpdatedByAdminID>
                        <SendIssuance>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/SendIssuance"/>
                        </SendIssuance>
                        <EveryTOD>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EveryTOD"/>
                        </EveryTOD>
                        <ManufacturerCoupon>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/ManufacturerCoupon"/>
                        </ManufacturerCoupon>
                        <ChargebackVendorCode>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/ChargebackVendorID"/>
                        </ChargebackVendorCode>
                        <VendorCouponCode>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/VendorCouponCode"/>
                        </VendorCouponCode>
                        <MutuallyExclusive>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/MutuallyExclusive"/>
                        </MutuallyExclusive>
                        <EnableImpressRpt>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EnableImpressRpt"/>
                        </EnableImpressRpt>
                        <EngineSubTypeID>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Int32'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EngineSubTypeID"/>
                        </EngineSubTypeID>
                        <AutoTransferable>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/AutoTransferable"/>
                        </AutoTransferable>
                        <RestrictedRedemption>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'Boolean'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/RestrictedRedemption"/>
                        </RestrictedRedemption>
                        <StartTime>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/StartTime"/>
                        </StartTime>
                        <EndTime>
                            <xsl:attribute name="DataType">
                                <xsl:value-of select="'String'"/>
                            </xsl:attribute>
                            <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/EndTime"/>
                        </EndTime>
                    </Header>
                    <Conditions>
                        <xsl:for-each select="$Get_RewardOptions/resultSet/Record">
                            <Customer>
                                <IncentiveCustomerID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="IncentiveCustomerID"/>
                                </IncentiveCustomerID>
                                <RewardOptionID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int64'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="RewardOptionID"/>
                                </RewardOptionID>
                                <CustomerGroupID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="CustomerGroupID"/>
                                </CustomerGroupID>
                                <ExcludedUsers>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="ExcludedUsers"/>
                                </ExcludedUsers>
                                <Deleted>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="Deleted"/>
                                </Deleted>
                                <LastUpdate>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'DateTime'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa', LastUpdate)"/>
                                </LastUpdate>
                                <ConditionNumber>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'String'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="ConditionNumber"/>
                                </ConditionNumber>
                                <HHEnable>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="HHEnable"/>
                                </HHEnable>
                                <RequiredFromTemplate>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="RequiredFromTemplate"/>
                                </RequiredFromTemplate>
                            </Customer>
                        </xsl:for-each>
                        <Product>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/IncentiveProductGroupID">
                                <IncentiveProductGroupID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/IncentiveProductGroupID"/>
                                </IncentiveProductGroupID>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/RewardOptionID">
                                <RewardOptionID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int64'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/RewardOptionID"/>
                                </RewardOptionID>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/ProductGroupID">
                                <ProductGroupID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/ProductGroupID"/>
                                </ProductGroupID>
                            </xsl:if>
                            <QtyForIncentive>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Decimal'"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/QtyForIncentive"/>
                            </QtyForIncentive>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/QtyUnitType">
                                <QtyUnitType>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/QtyUnitType"/>
                                </QtyUnitType>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/AccumMin">
                                <AccumMin>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/AccumMin"/>
                                </AccumMin>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/AccumLimit">
                                <AccumLimit>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/AccumLimit"/>
                                </AccumLimit>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/AccumPeriod">
                                <AccumPeriod>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/AccumPeriod"/>
                                </AccumPeriod>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/ExcludedProducts">
                                <ExcludedProducts>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/ExcludedProducts"/>
                                </ExcludedProducts>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/Deleted">
                                <Deleted>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/Deleted"/>
                                </Deleted>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/LastUpdate">
                                <LastUpdate>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'DateTime'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',$Get_IncentiveProductGroups/resultSet/Record[1]/LastUpdate)"/>
                                </LastUpdate>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/ConditionNumber">
                                <ConditionNumber>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'String'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/ConditionNumber"/>
                                </ConditionNumber>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/DisallowEdit">
                                <DisallowEdit>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Stirng'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/DisallowEdit"/>
                                </DisallowEdit>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/ProductComboID">
                                <ProductComboID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/ProductComboID"/>
                                </ProductComboID>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/RequiredFromTemplate">
                                <RequiredFromTemplate>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/RequiredFromTemplate"/>
                                </RequiredFromTemplate>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/Disqualifier">
                                <Disqualifier>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/Disqualifier"/>
                                </Disqualifier>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/Rounding">
                                <Rounding>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/Rounding"/>
                                </Rounding>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/MinPurchAmt">
                                <MinPurchAmt>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/MinPurchAmt"/>
                                </MinPurchAmt>
                            </xsl:if>
                            <xsl:if test="$Get_IncentiveProductGroups/resultSet/Record[1]/UniqueProduct">
                                <UniqueProduct>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_IncentiveProductGroups/resultSet/Record[1]/UniqueProduct"/>
                                </UniqueProduct>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="count($Get_IncentiveProductGroups/resultSet/Record) > 1">
                                    <Tiers>
                                        <xsl:for-each select="$Get_IncentiveProductGroups/resultSet/Record">
                                            <Tier>
                                                <PKID>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Int64'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="Priority"/>
                                                </PKID>
                                                <IncentiveProductGroupID>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Int32'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="IncentiveProductGroupID"/>
                                                </IncentiveProductGroupID>
                                                <RewardOptionID>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Int64'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="RewardOptionID"/>
                                                </RewardOptionID>
                                                <TierLevel>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Byte'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="Priority"/>
                                                </TierLevel>
                                                <Quantity>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Decimal'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="Quantity"/>
                                                </Quantity>
                                            </Tier>
                                        </xsl:for-each>
                                    </Tiers>
                                </xsl:when>
                            </xsl:choose>
                        </Product>
                        <TriggerCode>
                            <xsl:if test="$Get_RewardOptions/resultSet/Record[1]/PLU">
                                <PLU>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'String'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_RewardOptions/resultSet/Record[1]/PLU"/>
                                </PLU>
                            </xsl:if>
                        </TriggerCode>
                    </Conditions>
                    <Notifications>
                        <PrintedMessage/>
                    </Notifications>
                    <Rewards>
                        <Discount>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/DiscountID">
                                <DiscountID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/DiscountID"/>
                                </DiscountID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/Name">
                                <Name>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'String'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/Name"/>
                                </Name>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/DiscountTypeID">
                                <DiscountTypeID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/DiscountTypeID"/>
                                </DiscountTypeID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/ReceiptDescription">
                                <ReceiptDescription>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'String'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/ReceiptDescription"/>
                                </ReceiptDescription>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/SpecifyBarcode">
                                <SpecifyBarcode>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/SpecifyBarcode"/>
                                </SpecifyBarcode>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/DiscountBarcode">
                                <DiscountBarcode>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'String'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/DiscountBarcode"/>
                                </DiscountBarcode>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/VoidBarcode">
                                <VoidBarcode>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'String'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/VoidBarcode"/>
                                </VoidBarcode>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/DiscountedProductGroupID">
                                <DiscountedProductGroupID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/DiscountedProductGroupID"/>
                                </DiscountedProductGroupID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/ExcludedProductGroupID">
                                <ExcludedProductGroupID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/ExcludedProductGroupID"/>
                                </ExcludedProductGroupID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/BestDeal">
                                <BestDeal>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/BestDeal"/>
                                </BestDeal>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/AllowNegative">
                                <AllowNegative>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/AllowNegative"/>
                                </AllowNegative>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/ComputeDiscount">
                                <ComputeDiscount>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/ComputeDiscount"/>
                                </ComputeDiscount>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/DiscountAmount">
                                <DiscountAmount>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/DiscountAmount"/>
                                </DiscountAmount>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/AmountTypeID">
                                <AmountTypeID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/AmountTypeID"/>
                                </AmountTypeID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/L1Cap">
                                <L1Cap>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/L1Cap"/>
                                </L1Cap>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/L2DiscountAmt">
                                <L2DiscountAmt>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/L2DiscountAmt"/>
                                </L2DiscountAmt>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/L2AmountTypeID">
                                <L2AmountTypeID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/L2AmountTypeID"/>
                                </L2AmountTypeID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/L2Cap">
                                <L2Cap>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/L2Cap"/>
                                </L2Cap>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/L3DiscountAmt">
                                <L3DiscountAmt>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/L3DiscountAmt"/>
                                </L3DiscountAmt>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/L3AmountTypeID">
                                <L3AmountTypeID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/L3AmountTypeID"/>
                                </L3AmountTypeID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/ItemLimit">
                                <ItemLimit>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/ItemLimit"/>
                                </ItemLimit>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/WeightLimit">
                                <WeightLimit>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/WeightLimit"/>
                                </WeightLimit>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/DollarLimit">
                                <DollarLimit>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/DollarLimit"/>
                                </DollarLimit>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/ChargebackDeptID">
                                <ChargebackDeptID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/ChargebackDeptID"/>
                                </ChargebackDeptID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/DecliningBalance">
                                <DecliningBalance>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/DecliningBalance"/>
                                </DecliningBalance>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/RetroactiveDiscount">
                                <RetroactiveDiscount>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Boolean'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/RetroactiveDiscount"/>
                                </RetroactiveDiscount>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/UserGroupID">
                                <UserGroupID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/UserGroupID"/>
                                </UserGroupID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/SVProgramID">
                                <SVProgramID>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Int32'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/SVProgramID"/>
                                </SVProgramID>
                            </xsl:if>
                            <xsl:if test="$Get_Discounts/resultSet/Record[1]/PercentFixedRounding">
                                <PercentFixedRounding>
                                    <xsl:attribute name="DataType">
                                        <xsl:value-of select="'Decimal'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Get_Discounts/resultSet/Record[1]/PercentFixedRounding"/>
                                </PercentFixedRounding>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="count($Get_Discounts/resultSet/Record) > 1">
                                    <Tiers>
                                        <xsl:for-each select="$Get_Discounts/resultSet/Record">
                                            <Tier>
                                                <PKID>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Int64'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="Priority"/>
                                                </PKID>
                                                <DiscountID>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Int32'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="DiscountID"/>
                                                </DiscountID>
                                                <TierLevel>
                                                    <xsl:attribute name="DataType">
                                                        <xsl:value-of select="'Byte'"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="Priority"/>
                                                </TierLevel>
                                                <xsl:if test="ReceiptDescription">
                                                    <ReceiptDescription>
                                                        <xsl:attribute name="DataType">
                                                            <xsl:value-of select="'String'"/>
                                                        </xsl:attribute>
                                                        <xsl:value-of select="ReceiptDescription"/>
                                                    </ReceiptDescription>
                                                </xsl:if>
                                                <xsl:if test="DiscountAmount">
                                                    <DiscountAmount>
                                                        <xsl:attribute name="DataType">
                                                            <xsl:value-of select="'Decimal'"/>
                                                        </xsl:attribute>
                                                        <xsl:value-of select="DiscountAmount"/>
                                                    </DiscountAmount>
                                                </xsl:if>
                                                <xsl:if test="ItemLimit">
                                                    <ItemLimit>
                                                        <xsl:attribute name="DataType">
                                                            <xsl:value-of select="'Int32'"/>
                                                        </xsl:attribute>
                                                        <xsl:value-of select="ItemLimit"/>
                                                    </ItemLimit>
                                                </xsl:if>
                                            </Tier>
                                        </xsl:for-each>
                                    </Tiers>
                                </xsl:when>
                            </xsl:choose>
                        </Discount>
                    </Rewards>
                    <Banners>
                        <Banner>
                            <BannerID>
                                <xsl:attribute name="DataType">
                                    <xsl:value-of select="'Int32'"/>
                                </xsl:attribute>
                                <xsl:value-of select="2"/>
                            </BannerID>
                        </Banner>
                    </Banners>
                    <Auxilary>
                        <xsl:for-each select="$Get_CustomerGroups/resultSet/Auxilary/CustomerGroup">
                            <CustomerGroup>
                                <Header>
                                    <CustomerGroupID>
                                        <xsl:value-of select="Header/CustomerGroupID"/>
                                    </CustomerGroupID>
                                    <Name>
                                        <xsl:value-of select="Header/Name"/>
                                    </Name>
                                    <NewCardholders>
                                        <xsl:value-of select="Header/NewCardholders"/>
                                    </NewCardholders>
                                    <AnyCAMCardholder>
                                        <xsl:value-of select="Header/AnyCAMCardholder"/>
                                    </AnyCAMCardholder>
                                </Header>
                                <xsl:if test="Customers">
                                    <Customers>
                                        <xsl:value-of select="Customers"/>
                                    </Customers>
                                </xsl:if>
                            </CustomerGroup>
                        </xsl:for-each>
                        <xsl:for-each select="$Get_Locations/pfx:Auxilary/LocationGroup">
                            <LocationGroup>
                                <Header>
                                    <LocationGroupID>
                                        <xsl:value-of select="Header/LocationGroupID"/>
                                    </LocationGroupID>
                                    <xsl:if test="Header/Name">
                                        <Name>
                                            <xsl:value-of select="Header/Name"/>
                                        </Name>
                                    </xsl:if>
                                    <xsl:if test="Header/Description">
                                        <Description>
                                            <xsl:value-of select="Header/Description"/>
                                        </Description>
                                    </xsl:if>
                                    <CreatedDate>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',Header/CreatedDate)"/>
                                    </CreatedDate>
                                    <xsl:if test="Header/ExtGroupID">
                                        <ExtGroupID>
                                            <xsl:value-of select="Header/ExtGroupID"/>
                                        </ExtGroupID>
                                    </xsl:if>
                                    <xsl:if test="Header/ExtSeqNum">
                                        <ExtSeqNum>
                                            <xsl:value-of select="Header/ExtSeqNum"/>
                                        </ExtSeqNum>
                                    </xsl:if>
                                    <xsl:if test="Header/ExtExcluded">
                                        <ExtExcluded>
                                            <xsl:value-of select="Header/ExtExcluded"/>
                                        </ExtExcluded>
                                    </xsl:if>
                                    <xsl:if test="Header/AllLocations">
                                        <AllLocations>
                                            <xsl:value-of select="Header/AllLocations"/>
                                        </AllLocations>
                                    </xsl:if>
                                    <LastUpdate>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa',Header/LastUpdate)"/>
                                    </LastUpdate>
                                    <xsl:if test="Header/StatusFlag">
                                        <StatusFlag>
                                            <xsl:value-of select="Header/StatusFlag"/>
                                        </StatusFlag>
                                    </xsl:if>
                                    <xsl:if test="Header/TCRMAStatusFlag">
                                        <TCRMAStatusFlag>
                                            <xsl:value-of select="Header/TCRMAStatusFlag"/>
                                        </TCRMAStatusFlag>
                                    </xsl:if>
                                    <xsl:if test="Header/EngineID">
                                        <EngineID>
                                            <xsl:value-of select="Header/EngineID"/>
                                        </EngineID>
                                    </xsl:if>
                                    <xsl:if test="Header/BannerID">
                                        <BannerID>
                                            <xsl:value-of select="Header/BannerID"/>
                                        </BannerID>
                                    </xsl:if>
                                </Header>
                                <Locations>
                                    <xsl:for-each select="Locations/Location">
                                        <Location>
                                            <Header>
                                                <LocationID>
                                                    <xsl:value-of select="Header/LocationID"/>
                                                </LocationID>
                                                <xsl:if test="Header/ExtLocationCode">
                                                    <ExtLocationCode>
                                                        <xsl:value-of select="Header/ExtLocationCode"/>
                                                    </ExtLocationCode>
                                                </xsl:if>
                                                <xsl:if test="Header/LocationName">
                                                    <LocationName>
                                                        <xsl:value-of select="Header/LocationName"/>
                                                    </LocationName>
                                                </xsl:if>
                                                <xsl:if test="Header/Address1">
                                                    <Address1>
                                                        <xsl:value-of select="Header/Address1"/>
                                                    </Address1>
                                                </xsl:if>
                                                <xsl:if test="Header/Address2">
                                                    <Address2>
                                                        <xsl:value-of select="Header/Address2"/>
                                                    </Address2>
                                                </xsl:if>
                                                <xsl:if test="Header/City">
                                                    <City>
                                                        <xsl:value-of select="Header/City"/>
                                                    </City>
                                                </xsl:if>
                                                <xsl:if test="Header/State">
                                                    <State>
                                                        <xsl:value-of select="Header/State"/>
                                                    </State>
                                                </xsl:if>
                                                <xsl:if test="Header/Zip">
                                                    <Zip>
                                                        <xsl:value-of select="Header/Zip"/>
                                                    </Zip>
                                                </xsl:if>
                                                <xsl:if test="Header/TestingLocation">
                                                    <TestingLocation>
                                                        <xsl:value-of select="Header/TestingLocation"/>
                                                    </TestingLocation>
                                                </xsl:if>
                                                <xsl:if test="Header/LastUpdate">
                                                    <LastUpdate>
                                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa', Header/LastUpdate)"/>
                                                    </LastUpdate>
                                                </xsl:if>
                                                <xsl:if test="Header/StatusFlag">
                                                    <StatusFlag>
                                                        <xsl:value-of select="Header/StatusFlag"/>
                                                    </StatusFlag>
                                                </xsl:if>
                                                <xsl:if test="Header/CMConnMD5">
                                                    <CMConnMD5>
                                                        <xsl:value-of select="Header/CMConnMD5"/>
                                                    </CMConnMD5>
                                                </xsl:if>
                                                <xsl:if test="Header/CountryID">
                                                    <CountryID>
                                                        <xsl:value-of select="Header/CountryID"/>
                                                    </CountryID>
                                                </xsl:if>
                                                <xsl:if test="Header/ContactName">
                                                    <ContactName>
                                                        <xsl:value-of select="Header/ContactName"/>
                                                    </ContactName>
                                                </xsl:if>
                                                <xsl:if test="Header/PhoneNumber">
                                                    <PhoneNumber>
                                                        <xsl:value-of select="Header/PhoneNumber"/>
                                                    </PhoneNumber>
                                                </xsl:if>
                                                <xsl:if test="Header/SendAlert">
                                                    <SendAlert>
                                                        <xsl:value-of select="Header/SendAlert"/>
                                                    </SendAlert>
                                                </xsl:if>
                                                <xsl:if test="Header/GenIPL">
                                                    <GenIPL>
                                                        <xsl:value-of select="Header/GenIPL"/>
                                                    </GenIPL>
                                                </xsl:if>
                                                <xsl:if test="string-length(Header/LastIPL)!=0">
                                                    <LastIPL>
                                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa', Header/LastIPL)"/>
                                                    </LastIPL>
                                                </xsl:if>
                                                <xsl:if test="Header/CMOADeployRpt">
                                                    <CMOADeployRpt>
                                                        <xsl:value-of select="Header/CMOADeployRpt"/>
                                                    </CMOADeployRpt>
                                                </xsl:if>
                                                <xsl:if test="Header/CMOADeployStatus">
                                                    <CMOADeployStatus>
                                                        <xsl:value-of select="Header/CMOADeployStatus"/>
                                                    </CMOADeployStatus>
                                                </xsl:if>
                                                <xsl:if test="Header/CMOARptDate">
                                                    <CMOARptDate>
                                                        <xsl:value-of select="Header/CMOARptDate"/>
                                                    </CMOARptDate>
                                                </xsl:if>
                                                <xsl:if test="Header/CMOADeploySuccessDate">
                                                    <CMOADeploySuccessDate>
                                                        <xsl:value-of select="Header/CMOADeploySuccessDate"/>
                                                    </CMOADeploySuccessDate>
                                                </xsl:if>
                                                <xsl:if test="Header/EngineID">
                                                    <EngineID>
                                                        <xsl:value-of select="Header/EngineID"/>
                                                    </EngineID>
                                                </xsl:if>
                                                <xsl:if test="Header/LastErrorTime">
                                                    <LastErrorTime>
                                                        <xsl:value-of select="Header/LastErrorTime"/>
                                                    </LastErrorTime>
                                                </xsl:if>
                                                <xsl:if test="Header/BannerID">
                                                    <BannerID>
                                                        <xsl:value-of select="Header/BannerID"/>
                                                    </BannerID>
                                                </xsl:if>
                                            </Header>
                                        </Location>
                                    </xsl:for-each>
                                </Locations>
                            </LocationGroup>
                        </xsl:for-each>
                        <xsl:for-each select="$Get_GroupProducts/resultSet/Auxilary/ProductGroup">
                            <ProductGroup>
                                <Header>
                                    <xsl:if test="Header/ProductGroupID">
                                        <ProductGroupID>
                                            <xsl:value-of select="Header/ProductGroupID"/>
                                        </ProductGroupID>
                                    </xsl:if>
                                    <Name>
                                        <xsl:value-of select="Header/Name"/>
                                    </Name>
                                    <AnyProduct>
                                        <xsl:value-of select="Header/AnyProduct"/>
                                    </AnyProduct>
                                </Header>
                                <xsl:if test="Products">
                                    <Products>
                                        <xsl:value-of select="Products"/>
                                    </Products>
                                </xsl:if>
                            </ProductGroup>
                        </xsl:for-each>
                        <xsl:for-each select="$Get_Terminals/resultSet/Record">
                            <Terminal>
                                <Header>
                                    <TerminalTypeID>
                                        <xsl:value-of select="TerminalTypeID"/>
                                    </TerminalTypeID>
                                    <xsl:if test="Name">
                                        <Name>
                                            <xsl:value-of select="Name"/>
                                        </Name>
                                    </xsl:if>
                                    <xsl:if test="Description">
                                        <Description>
                                            <xsl:value-of select="Description"/>
                                        </Description>
                                    </xsl:if>
                                    <xsl:if test="ExtTerminalCode">
                                        <ExtTerminalCode>
                                            <xsl:value-of select="ExtTerminalCode"/>
                                        </ExtTerminalCode>
                                    </xsl:if>
                                    <LastUpdate>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy hh:mm:ss aa', LastUpdate)"/>
                                    </LastUpdate>
                                    <xsl:if test="LayoutID">
                                        <LayoutID>
                                            <xsl:value-of select="LayoutID"/>
                                        </LayoutID>
                                    </xsl:if>
                                    <xsl:if test="EngineID">
                                        <EngineID>
                                            <xsl:value-of select="EngineID"/>
                                        </EngineID>
                                    </xsl:if>
                                    <xsl:if test="SpecificPromosOnly">
                                        <SpecificPromosOnly>
                                            <xsl:value-of select="SpecificPromosOnly"/>
                                        </SpecificPromosOnly>
                                    </xsl:if>
                                    <FuelProcessing>
                                        <xsl:value-of select="FuelProcessing"/>
                                    </FuelProcessing>
                                    <AnyTerminal>
                                        <xsl:value-of select="AnyTerminal"/>
                                    </AnyTerminal>
                                    <BannerID>
                                        <xsl:value-of select="BannerID"/>
                                    </BannerID>
                                    <Excluded>
                                        <xsl:value-of select="Excluded"/>
                                    </Excluded>
                                </Header>
                            </Terminal>
                        </xsl:for-each>
                    </Auxilary>
                </Offer>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Get_IncentiveProductGroups">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>627</pd:x>
            <pd:y>137</pd:y>
            <config>
                <processName>/Processes/Sub Process/Get_IncentiveProductGroups.process</processName>
            </config>
            <pd:inputBindings>
                <IncentiveID>
                    <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                </IncentiveID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Get_GroupProducts">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>666</pd:x>
            <pd:y>310</pd:y>
            <config>
                <processName>/Processes/Sub Process/Get_GroupProducts.process</processName>
            </config>
            <pd:inputBindings>
                <IncentiveID>
                    <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                </IncentiveID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Get_Discounts">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>649</pd:x>
            <pd:y>543</pd:y>
            <config>
                <processName>/Processes/Sub Process/Get_Discounts.process</processName>
            </config>
            <pd:inputBindings>
                <IncentiveID>
                    <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                </IncentiveID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Get_RewardOptions">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>648</pd:x>
            <pd:y>220</pd:y>
            <config>
                <processName>/Processes/Sub Process/Get_RewardOptions.process</processName>
            </config>
            <pd:inputBindings>
                <IncentiveID>
                    <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                </IncentiveID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Get_Locations">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>668</pd:x>
            <pd:y>468</pd:y>
            <config>
                <processName>/Processes/Sub Process/Get_Locations.process</processName>
            </config>
            <pd:inputBindings>
                <IncentiveID>
                    <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                </IncentiveID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Get_Terminals">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>628</pd:x>
            <pd:y>637</pd:y>
            <config>
                <processName>/Processes/Sub Process/Get_Terminals.process</processName>
            </config>
            <pd:inputBindings>
                <IncentiveID>
                    <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                </IncentiveID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate Error 1">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>886</pd:x>
            <pd:y>531</pd:y>
            <config>
                <faultName>Exception</faultName>
            </config>
            <pd:inputBindings>
                <pfx3:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                    <data>
                        <Exception>
                            <Domain>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Domain"/>
                            </Domain>
                            <Deployment>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Deployment"/>
                            </Deployment>
                            <Project>
                                <xsl:value-of select="$_processContext/ns1:ProcessContext/ProjectName"/>
                            </Project>
                            <EngineName>
                                <xsl:value-of select="$_processContext/ns1:ProcessContext/EngineName"/>
                            </EngineName>
                            <TimeStamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </TimeStamp>
                            <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                                <Code>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                </Code>
                            </xsl:if>
                            <Message>
                                <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport, 0,0)"/>
                            </Message>
                        </Exception>
                    </data>
                </pfx3:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Render XML">
            <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
            <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
            <pd:x>1017</pd:x>
            <pd:y>530</pd:y>
            <config>
                <renderAsText>text</renderAsText>
                <validateInput>false</validateInput>
                <term ref="pfx2:Offer"/>
            </config>
            <pd:inputBindings>
                <xsl:copy-of select="$Map-Offer/Offer"/>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate Error 2">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>1024</pd:x>
            <pd:y>238</pd:y>
            <config>
                <faultName>Exception</faultName>
            </config>
            <pd:inputBindings>
                <pfx3:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                    <data>
                        <Exception>
                            <Domain>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Domain"/>
                            </Domain>
                            <Deployment>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Deployment"/>
                            </Deployment>
                            <Project>
                                <xsl:value-of select="$_processContext/ns1:ProcessContext/ProjectName"/>
                            </Project>
                            <EngineName>
                                <xsl:value-of select="$_processContext/ns1:ProcessContext/EngineName"/>
                            </EngineName>
                            <TimeStamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </TimeStamp>
                            <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                                <Code>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                </Code>
                            </xsl:if>
                            <Message>
                                <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport, 0,0)"/>
                            </Message>
                        </Exception>
                    </data>
                </pfx3:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Get_CustomerGroups">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>675</pd:x>
            <pd:y>396</pd:y>
            <config>
                <processName>/Processes/Sub Process/Get_GroupCustomer.process</processName>
            </config>
            <pd:inputBindings>
                <IncentiveID>
                    <xsl:value-of select="$Get_CpeIncnts/resultSet/Record[$index]/IncentiveID"/>
                </IncentiveID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JMS Topic Publisher">
            <pd:type>com.tibco.plugin.jms.JMSTopicPublishActivity</pd:type>
            <pd:resourceType>ae.activities.JMSTopicPublishActivity</pd:resourceType>
            <pd:x>1020</pd:x>
            <pd:y>393</pd:y>
            <config>
                <PermittedMessageType>Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>%%Destinations/Topics/GLB_COMMON_COPIENT_OFFEREXPORT_TOPIC%%</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>%%Connections/Properties/GLB_DELIVERY_MODE%%</JMSDeliveryMode>
                    <JMSExpiration>%%Connections/Properties/GLB_JMS_EXPIRATION%%</JMSExpiration>
                    <JMSPriority>%%Connections/Properties/GLB_JMS_PRIORITY%%</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/Shared Resources/Connections/JMS/EMS.sharedjmscon</ConnectionReference>
            </config>
            <pd:inputBindings>
                <ns0:ActivityInput>
                    <Body>
                        <xsl:value-of select="$Render-XML/xmlString"/>
                    </Body>
                </ns0:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="transition 2">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>884</pd:x>
            <pd:y>256</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Set_DateInitial">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1189</pd:x>
            <pd:y>535</pd:y>
            <config>
                <processName>/Processes/Sub Process/Set_DateInitial.process</processName>
            </config>
            <pd:inputBindings>
                <DATE>
                    <xsl:value-of select="tib:format-dateTime('yyyy-MM-dd HH:mm:ss.SSS ',$iterator/Record/LastUpdate)"/>
                </DATE>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetSimpleMessage">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1192</pd:x>
            <pd:y>361</pd:y>
            <config>
                <processName>/Processes/Main Process/GetSimpleMessage.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:copy-of select="$Get_Locations/pfx:Auxilary"/>
                    <xsl:copy-of select="$Map-Offer/Offer"/>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1358</pd:x>
        <pd:y>505</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>false</catchAll>
            <fault>localname=Exception</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Audit Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1435</pd:x>
        <pd:y>204</pd:y>
        <config>
            <processName>/Utility Services/Audit Process/AuditProcess.process</processName>
        </config>
        <pd:inputBindings>
            <pfx4:AuditingSchema>
                <pfx4:inrtn_id>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ExceptionHandling/MIG_ERR_INTEGRATION_ID"/>
                </pfx4:inrtn_id>
                <pfx4:inrtn_nm>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProjectName"/>
                </pfx4:inrtn_nm>
                <pfx4:inrtn_instn_nm>
                    <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId)"/>
                </pfx4:inrtn_instn_nm>
                <pfx4:inrtn_proc_id>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProcessId"/>
                </pfx4:inrtn_proc_id>
                <pfx4:inrtn_rec_cnt>
                    <xsl:value-of select="count($Get_CpeIncnts/resultSet/Record)"/>
                </pfx4:inrtn_rec_cnt>
                <pfx4:inrtn_cre8_ts>
                    <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd HH:mm:ss&quot;, current-dateTime())"/>
                </pfx4:inrtn_cre8_ts>
            </pfx4:AuditingSchema>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="transition 1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>426</pd:x>
        <pd:y>390</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Get_DateInitial">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>185</pd:x>
        <pd:y>391</pd:y>
        <config>
            <processName>/Processes/Sub Process/Get_DateInitial.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="transition 3">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1436</pd:x>
        <pd:y>390</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorProcess (1)">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1459</pd:x>
        <pd:y>506</pd:y>
        <config>
            <processName>/Utility Services/Exception Handling/ErrorProcess (1).process</processName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$Catch/Exception"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>CPE_INCNTS_GROUP</pd:from>
        <pd:to>Audit Process</pd:to>
        <pd:xpathDescription>offer inserted </pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Audit Process</pd:from>
        <pd:to>transition 3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CPE_INCNTS_GROUP</pd:from>
        <pd:to>transition 3</pd:to>
        <pd:xpathDescription>not offers</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>empty($Get_CpeIncnts/resultSet/Record/IncentiveID)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>transition 1</pd:from>
        <pd:to>CPE_INCNTS_GROUP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_CpeIncnts</pd:from>
        <pd:to>transition 1</pd:to>
        <pd:xpathDescription>Not Offers</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get_DateInitial</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_DateInitial</pd:from>
        <pd:to>Get_CpeIncnts</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>transition 3</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorProcess (1)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorProcess (1)</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>