<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns12="www.tibco.com/plugin/Sleep" xmlns:ns13="http://xmlns.heb.com/ei/ErrorManagementSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Heb2bProveedorSubscriber/Sub Process/updateProveedorHEBB.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="root" minOccurs="0" maxOccurs="unbounded">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="IdPMM" type="xsd:string"/>
                                <xsd:element name="Nombre" type="xsd:string"/>
                                <xsd:element name="Calle" type="xsd:string"/>
                                <xsd:element name="Colonia" type="xsd:string"/>
                                <xsd:element name="Pais" type="xsd:string"/>
                                <xsd:element name="Municipio" type="xsd:string"/>
                                <xsd:element name="Estado" type="xsd:string"/>
                                <xsd:element name="IdMoneda" type="xsd:string"/>
                                <xsd:element name="CodigoPostal" type="xsd:string"/>
                                <xsd:element name="TelelfonoPrincipal" type="xsd:string"/>
                                <xsd:element name="ContactoPrincipal" type="xsd:string"/>
                                <xsd:element name="GLN" type="xsd:string"/>
                                <xsd:element name="Fax" type="xsd:string"/>
                                <xsd:element name="EmailResponsable" type="xsd:string"/>
                                <xsd:element name="RFC" type="xsd:string"/>
                                <xsd:element name="EsAcreedor" type="xsd:string"/>
                                <xsd:element name="AceptaDevoluciones" type="xsd:string"/>
                                <xsd:element name="IdProvedorHEBB" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>223</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>637</pd:endX>
    <pd:endY>221</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1389201344393</pd:targetNamespace>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>116</pd:x>
        <pd:y>1</pd:y>
        <pd:width>410</pd:width>
        <pd:height>427</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>count</pd:indexSlot>
            <pd:errorCondition>$count &gt;= $_globalVariables/ns:GlobalVariables/RetryConfig/GBL_MAX_RETRIES</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>JDBC Update</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JDBC Update</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Java Code</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep-1</pd:from>
            <pd:to>Generate-Error-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep-1</pd:from>
            <pd:to>ErrorProcess-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$count = $_globalVariables/ns:GlobalVariables/RetryConfig/GBL_MAX_RETRIES</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Java Code</pd:from>
            <pd:to>Sleep-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Java-Code/javaCodeActivityOutput/TYPE_ERROR = 'true'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>JDBC Update</pd:from>
            <pd:to>Java Code</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="Sleep-1">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>192</pd:x>
            <pd:y>351</pd:y>
            <config/>
            <pd:inputBindings>
                <ns12:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/RetryConfig/GBL_RETRY_DELAY"/>
                    </IntervalInMillisec>
                </ns12:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate-Error-1">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>431</pd:x>
            <pd:y>351</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns1:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </messageCode>
                </ns1:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ErrorProcess-1">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>432</pd:x>
            <pd:y>259</pd:y>
            <config>
                <processName>/Utility Services/Exception Handling/ErrorProcess.process</processName>
            </config>
            <pd:inputBindings>
                <ns13:MSG_Container>
                    <ns13:Header>
                        <ns13:ProjectName>
                            <xsl:value-of select="$_processContext/ns2:ProcessContext/ProjectName"/>
                        </ns13:ProjectName>
                        <ns13:Source_Domain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ProjectConfig/Source_Domain"/>
                        </ns13:Source_Domain>
                        <ns13:Destination_Domain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ProjectConfig/Destination_Domain"/>
                        </ns13:Destination_Domain>
                        <ns13:Transaction_Type>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ProjectConfig/Transaction_Type"/>
                        </ns13:Transaction_Type>
                        <ns13:TimeStamp>
                            <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd hh:mm:ss&quot;, current-dateTime())"/>
                        </ns13:TimeStamp>
                    </ns13:Header>
                    <ns13:Body>
                        <ns13:ErrorManagementSchema>
                            <ns13:inrtn_id>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExceptionHandling/MIG_ERR_INTEGRATION_ID"/>
                            </ns13:inrtn_id>
                            <ns13:inrtn_instn_nm>
                                <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId)"/>
                            </ns13:inrtn_instn_nm>
                            <ns13:inrtn_err_rtn_desc>
                                <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                            </ns13:inrtn_err_rtn_desc>
                            <ns13:inrtn_msg_body>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                            </ns13:inrtn_msg_body>
                            <ns13:cre8_ts>
                                <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd hh:mm:ss&quot;, current-dateTime())"/>
                            </ns13:cre8_ts>
                            <ns13:u_code>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns13:u_code>
                            <ns13:sev_id>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExceptionHandling/GLB_ERR_SEV_HIGH"/>
                            </ns13:sev_id>
                        </ns13:ErrorManagementSchema>
                    </ns13:Body>
                </ns13:MSG_Container>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Java Code">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:x>196</pd:x>
            <pd:y>220</pd:y>
            <config>
                <fileName>updateProveedorHEBBJavaCode</fileName>
                <packageName>Heb2bProveedorProcess.SubProcess.updateProveedorHEBB</packageName>
                <fullsource>package Heb2bProveedorProcess.SubProcess.updateProveedorHEBB;
import java.util.*;
import java.io.*;
public class updateProveedorHEBBJavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String ERROR_CODE = "";
	protected String ERRORS = "";
	protected String TYPE_ERROR = "";
	public String getERROR_CODE() {
		return ERROR_CODE;
	}
	public void setERROR_CODE(String val) {
		ERROR_CODE = val;
	}
	public String getERRORS() {
		return ERRORS;
	}
	public void setERRORS(String val) {
		ERRORS = val;
	}
	public String getTYPE_ERROR() {
		return TYPE_ERROR;
	}
	public void setTYPE_ERROR(String val) {
		TYPE_ERROR = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public updateProveedorHEBBJavaCode() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String ERROR_CODE
	In  : String ERRORS
	Out : String TYPE_ERROR
* Available Variables: DO NOT MODIFY *****/

  
	  TYPE_ERROR="false";
           String [] ErrorArray  = ERRORS.split(",");

     for (int i = 0; i &lt; ErrorArray.length; i++) {
	if ((ErrorArray[i]).equals(ERROR_CODE))
	{
         TYPE_ERROR="true" ;
         break;
         }
 
	
 }   }
}
</fullsource>
                <inputData>
                    <row>
                        <fieldName>ERROR_CODE</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>ERRORS</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </inputData>
                <outputData>
                    <row>
                        <fieldName>TYPE_ERROR</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </outputData>
                <byteCode>
                    <class>
                        <name>updateProveedorHEBBJavaCode</name>
                        <byteCode>yv66vgAAADEANQkACwAiCQALACMJAAsAJAoADAAlCAAmCAAnCAAoCgApACoKACkAKwgALAcALQcALgEACkVSUk9SX0NPREUBABJMamF2YS9sYW5nL1N0cmluZzsBAAZFUlJPUlMBAApUWVBFX0VSUk9SAQANZ2V0RVJST1JfQ09ERQEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEADXNldEVSUk9SX0NPREUBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAlnZXRFUlJPUlMBAAlzZXRFUlJPUlMBAA1nZXRUWVBFX0VSUk9SAQANc2V0VFlQRV9FUlJPUgEABjxpbml0PgEAAygpVgEABmludm9rZQEACkV4Y2VwdGlvbnMHAC8BAApTb3VyY2VGaWxlAQAgdXBkYXRlUHJvdmVlZG9ySEVCQkphdmFDb2RlLmphdmEMAA0ADgwADwAODAAQAA4MABsAHAEAAAEABWZhbHNlAQABLAcAMAwAMQAyDAAzADQBAAR0cnVlAQBQSGViMmJQcm92ZWVkb3JQcm9jZXNzL1N1YlByb2Nlc3MvdXBkYXRlUHJvdmVlZG9ySEVCQi91cGRhdGVQcm92ZWVkb3JIRUJCSmF2YUNvZGUBABBqYXZhL2xhbmcvT2JqZWN0AQATamF2YS9sYW5nL0V4Y2VwdGlvbgEAEGphdmEvbGFuZy9TdHJpbmcBAAVzcGxpdAEAJyhMamF2YS9sYW5nL1N0cmluZzspW0xqYXZhL2xhbmcvU3RyaW5nOwEABmVxdWFscwEAFShMamF2YS9sYW5nL09iamVjdDspWgAhAAsADAAAAAMABAANAA4AAAAEAA8ADgAAAAQAEAAOAAAACAABABEAEgABABMAAAAdAAEAAQAAAAUqtAABsAAAAAEAFAAAAAYAAQAAAAoAAQAVABYAAQATAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAUAAAACgACAAAADQAFAA4AAQAXABIAAQATAAAAHQABAAEAAAAFKrQAArAAAAABABQAAAAGAAEAAAAQAAEAGAAWAAEAEwAAACIAAgACAAAABiortQACsQAAAAEAFAAAAAoAAgAAABMABQAUAAEAGQASAAEAEwAAAB0AAQABAAAABSq0AAOwAAAAAQAUAAAABgABAAAAFgABABoAFgABABMAAAAiAAIAAgAAAAYqK7UAA7EAAAABABQAAAAKAAIAAAAZAAUAGgABABsAHAABABMAAAA/AAIAAQAAABcqtwAEKhIFtQABKhIFtQACKhIFtQADsQAAAAEAFAAAABYABQAAABwABAAGAAoABwAQAAgAFgAdAAEAHQAcAAIAEwAAAGkAAgADAAAANSoSBrUAAyq0AAISB7YACEwDPRwrvqIAHyscMiq0AAG2AAmZAAwqEgq1AAOnAAmEAgGn/+GxAAAAAQAUAAAAIgAIAAAAJgAGACcAEAApABgAKgAlACwAKwAtAC4AKQA0ADEAHgAAAAQAAQAfAAEAIAAAAAIAIQ==</byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <ERROR_CODE>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </ERROR_CODE>
                    <ERRORS>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Heb2bProveedorProjectSubscriberVariables/GLB_ConditionForSuspend"/>
                    </ERRORS>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JDBC Update">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>196</pd:x>
            <pd:y>63</pd:y>
            <config>
                <timeout>%%Connections/Database/dbHEB2B/GLB_TIMEOUT%%</timeout>
                <commit>false</commit>
                <emptyStrAsNil>true</emptyStrAsNil>
                <jdbcSharedConfig>/Shared Resources/Connections/Database/dbHEB2B.sharedjdbc</jdbcSharedConfig>
                <statement>UPDATE Proveedor SET IdPMM = ?, Nombre = ?, Calle = ?, Colonia = ?, Pais = ?, Municipio = ?, Estado = ?, IdMoneda = ?, CodigoPostal = ?, 
TelefonoPrincipal = ?, ContactoPrincipal = ?, GLN = ?, Fax = ?, EmailResponsable = ?, RFC = ?, EsAcreedor = ?, AceptaDevoluciones = ? 
WHERE Id = ?</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>IdPMM</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>Nombre</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>Calle</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>Colonia</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>Pais</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>Municipio</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>Estado</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>IdMoneda</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>CodigoPostal</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>TelefonoPrincipal</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>ContactoPrincipal</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>GLN</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>Fax</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>EmailResponsable</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>RFC</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>EsAcreedor</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>AceptaDevoluciones</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>idValidacion</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <IdPMM>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/IdPMM)">
                                <xsl:value-of select="$Start/group/root[1]/IdPMM"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </IdPMM>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/group/root[1]/Nombre)!=0">
                            <Nombre>
                                <xsl:value-of select="$Start/group/root[1]/Nombre"/>
                            </Nombre>
                        </xsl:when>
                        <xsl:otherwise>
                            <Nombre>
                                <xsl:value-of select="'NULL'"/>
                            </Nombre>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/group/root[1]/Calle)!=0">
                            <Calle>
                                <xsl:value-of select="$Start/group/root[1]/Calle"/>
                            </Calle>
                        </xsl:when>
                        <xsl:otherwise>
                            <Calle>
                                <xsl:value-of select="'NULL'"/>
                            </Calle>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/group/root[1]/Colonia)!=0">
                            <Colonia>
                                <xsl:value-of select="$Start/group/root[1]/Colonia"/>
                            </Colonia>
                        </xsl:when>
                        <xsl:otherwise>
                            <Colonia>
                                <xsl:value-of select="'NULL'"/>
                            </Colonia>
                        </xsl:otherwise>
                    </xsl:choose>
                    <Pais>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/Pais)">
                                <xsl:value-of select="$Start/group/root[1]/Pais"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Pais>
                    <Municipio>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/Municipio)">
                                <xsl:value-of select="$Start/group/root[1]/Municipio"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Municipio>
                    <Estado>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/Estado)">
                                <xsl:value-of select="$Start/group/root[1]/Estado"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Estado>
                    <IdMoneda>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/IdMoneda)">
                                <xsl:value-of select="$Start/group/root[1]/IdMoneda"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </IdMoneda>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/group/root[1]/CodigoPostal)!=0">
                            <CodigoPostal>
                                <xsl:value-of select="$Start/group/root[1]/CodigoPostal"/>
                            </CodigoPostal>
                        </xsl:when>
                        <xsl:otherwise>
                            <CodigoPostal>
                                <xsl:value-of select="'0'"/>
                            </CodigoPostal>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/group/root[1]/TelelfonoPrincipal)!=0">
                            <TelefonoPrincipal>
                                <xsl:value-of select="$Start/group/root[1]/TelelfonoPrincipal"/>
                            </TelefonoPrincipal>
                        </xsl:when>
                        <xsl:otherwise>
                            <TelefonoPrincipal>
                                <xsl:value-of select="'0'"/>
                            </TelefonoPrincipal>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/group/root[1]/ContactoPrincipal)!=0">
                            <ContactoPrincipal>
                                <xsl:value-of select="$Start/group/root[1]/ContactoPrincipal"/>
                            </ContactoPrincipal>
                        </xsl:when>
                        <xsl:otherwise>
                            <ContactoPrincipal>
                                <xsl:value-of select="'NULL'"/>
                            </ContactoPrincipal>
                        </xsl:otherwise>
                    </xsl:choose>
                    <GLN>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/GLN)">
                                <xsl:value-of select="$Start/group/root[1]/GLN"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </GLN>
                    <Fax>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/Fax)">
                                <xsl:value-of select="$Start/group/root[1]/Fax"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Fax>
                    <EmailResponsable>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/EmailResponsable)">
                                <xsl:value-of select="$Start/group/root[1]/EmailResponsable"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </EmailResponsable>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/group/root[1]/RFC)!=0">
                            <RFC>
                                <xsl:value-of select="$Start/group/root[1]/RFC"/>
                            </RFC>
                        </xsl:when>
                        <xsl:otherwise>
                            <RFC>
                                <xsl:value-of select="'0'"/>
                            </RFC>
                        </xsl:otherwise>
                    </xsl:choose>
                    <EsAcreedor>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/EsAcreedor)">
                                <xsl:value-of select="$Start/group/root[1]/EsAcreedor"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </EsAcreedor>
                    <AceptaDevoluciones>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/AceptaDevoluciones)">
                                <xsl:value-of select="$Start/group/root[1]/AceptaDevoluciones"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </AceptaDevoluciones>
                    <idValidacion>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/root[1]/IdProvedorHEBB)">
                                <xsl:value-of select="$Start/group/root[1]/IdProvedorHEBB"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </idValidacion>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>